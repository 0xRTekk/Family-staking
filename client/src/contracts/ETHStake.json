{
  "contractName": "ETHStake",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_FAM",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dataFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DepositRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UpdatedRewards",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawRegistered",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTotalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getPendingRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_FAM\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dataFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UpdatedRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getPendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Require the address of the FAM token contract to be able to mint FAM to users\",\"params\":{\"_FAM\":\"address of the deployed contract\"}},\"deposit()\":{\"details\":\"Calls the registerStake internal function to process the user balance\"},\"getBalance(address)\":{\"params\":{\"_userAddress\":\"address of the user\"}},\"getPendingRewards(address)\":{\"params\":{\"_userAddress\":\"address of the user\"}},\"getTotalStaked()\":{\"details\":\"Calls the balanceOf ERC20 function to return the total staked DAI tokens on this contract \"},\"withdraw(uint256)\":{\"details\":\"Will revert if the contract ETH balance is not sufficient to fullfill the withdrawal\",\"params\":{\"_amount\":\"uint - Number of wei to withdraw\"}}},\"title\":\"Staking contract for ETH\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit()\":{\"notice\":\"Allow user to stake an amount of ETH and to add this amount to their balance.\"},\"getBalance(address)\":{\"notice\":\"Return the provided address balance\"},\"getPendingRewards(address)\":{\"notice\":\"Return a user pending reward balance\"},\"getTotalStaked()\":{\"notice\":\"Return the total staked DAI tokens \"},\"withdraw(uint256)\":{\"notice\":\"Allow user to unstake an amount of ETH from their account if balance is sufficient. There is a timelock on deposit of 2 days.\"}},\"notice\":\"This contract is used to stake ETH through the Family-Staking app\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ETHStake.sol\":\"ETHStake\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/DataFeedETHUSD.sol\":{\"keccak256\":\"0xe1af6c2daa452aa596b75bb64a1b43718f57ee34fc5d733ad25b5ef87c9d7b9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95fdd35d51394abdbc5c99fc0db99cd827cc86920e25d2703374d2758ea2e514\",\"dweb:/ipfs/Qmdcmp91XwZTktZJN4Krafj9mjUNcdKYoroABAMBbWz2QZ\"]},\"project:/contracts/ETHStake.sol\":{\"keccak256\":\"0xbc45a355e23f6284a7810511fab548077b018d9950204efd96e4c03a333b8142\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51b62f1f0717569c01f02301370ccc3174117918bf425e9598743e53d3d36cc9\",\"dweb:/ipfs/QmTycY5gXBVGKt8ei2ZQ6C1hmRAkVj5p2eTSkwLyFiWV6L\"]},\"project:/contracts/FAM.sol\":{\"keccak256\":\"0x24fcafaf84ae0505b0a812b486b52a094bd4d770bf07fc6310b92bd256fcd8b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92b47d4cb15aa128ea624873b777583bf2138cce4af1e6e2d388af399f07d7c3\",\"dweb:/ipfs/QmfXp4YA4LXYX635d6P2ziNzWgFyy828iB1uUqM8RYNy1b\"]},\"project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x6080604052662386f26fc100006004553480156200001c57600080fd5b5060405162000fa538038062000fa5833981810160405281019062000042919062000136565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200017d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000fe82620000d1565b9050919050565b6200011081620000f1565b81146200011c57600080fd5b50565b600081519050620001308162000105565b92915050565b6000806040838503121562000150576200014f620000cc565b5b600062000160858286016200011f565b925050602062000173858286016200011f565b9150509250929050565b610e18806200018d6000396000f3fe60806040526004361061004e5760003560e01c80630917e776146100625780632e1a7d4d1461008d578063d0e30db0146100b6578063f6ed2017146100c0578063f8b2cb4f146100fd5761005d565b3661005d5761005b61013a565b005b600080fd5b34801561006e57600080fd5b506100776102f4565b60405161008491906108e9565b60405180910390f35b34801561009957600080fd5b506100b460048036038101906100af9190610935565b6102fc565b005b6100be61066c565b005b3480156100cc57600080fd5b506100e760048036038101906100e291906109c0565b610676565b6040516100f491906108e9565b60405180910390f35b34801561010957600080fd5b50610124600480360381019061011f91906109c0565b6106bf565b60405161013191906108e9565b60405180910390f35b60045434101561017f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017690610a4a565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905034826102179190610a99565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550426000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060008211156102b7576102b682823361070a565b5b7fe865f22f57d0ae46c9f05f6677e4138264cb541aeb2c4bc8c82e7a9b3dd4905a33346040516102e8929190610afe565b60405180910390a15050565b600047905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060008103610385576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037c90610b73565b60405180910390fd5b818110156103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90610c05565b60405180910390fd5b814710156103d557600080fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905060006202a3008261042c9190610a99565b905080421015610471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046890610c71565b60405180910390fd5b838361047d9190610c91565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506104cd83833361070a565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637b56c2b233836040518363ffffffff1660e01b81526004016105b3929190610afe565b600060405180830381600087803b1580156105cd57600080fd5b505af11580156105e1573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc869081150290604051600060405180830381858888f1935050505015801561062b573d6000803e3d6000fd5b507f59945647ef1c847843ee61b123cb5a2b68b6f77f1466683a5c6b7ecd4a8a1cc8338660405161065d929190610afe565b60405180910390a15050505050565b61067461013a565b565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b60006018603c80854261071d9190610c91565b6107279190610cf4565b6107319190610cf4565b61073b9190610cf4565b905060006768155a43676e000090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e15f4736040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dd9190610d5b565b9050600082670de0b6b3a7640000612710670de0b6b3a76400008a866108039190610d88565b61080d9190610cf4565b6108179190610cf4565b866108229190610d88565b61082c9190610d88565b6108369190610cf4565b905080600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108879190610a99565b925050819055507ff28ead80696c20d8f2c4b30fe0abc00926c4923c4390de2cdabb35f61074fd6d85826040516108bf929190610afe565b60405180910390a150505050505050565b6000819050919050565b6108e3816108d0565b82525050565b60006020820190506108fe60008301846108da565b92915050565b600080fd5b610912816108d0565b811461091d57600080fd5b50565b60008135905061092f81610909565b92915050565b60006020828403121561094b5761094a610904565b5b600061095984828501610920565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061098d82610962565b9050919050565b61099d81610982565b81146109a857600080fd5b50565b6000813590506109ba81610994565b92915050565b6000602082840312156109d6576109d5610904565b5b60006109e4848285016109ab565b91505092915050565b600082825260208201905092915050565b7f4d696e696d756d206465706f73697420697320302e3031204554480000000000600082015250565b6000610a34601b836109ed565b9150610a3f826109fe565b602082019050919050565b60006020820190508181036000830152610a6381610a27565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa4826108d0565b9150610aaf836108d0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ae457610ae3610a6a565b5b828201905092915050565b610af881610982565b82525050565b6000604082019050610b136000830185610aef565b610b2060208301846108da565b9392505050565b7f4163636f756e7420697320656d70747900000000000000000000000000000000600082015250565b6000610b5d6010836109ed565b9150610b6882610b27565b602082019050919050565b60006020820190508181036000830152610b8c81610b50565b9050919050565b7f43616e6e6f74207769746864726177206d6f7265207468616e20796f7572206360008201527f757272656e742062616c616e6365000000000000000000000000000000000000602082015250565b6000610bef602e836109ed565b9150610bfa82610b93565b604082019050919050565b60006020820190508181036000830152610c1e81610be2565b9050919050565b7f4465706f7369742069732074696d65206c6f636b656400000000000000000000600082015250565b6000610c5b6016836109ed565b9150610c6682610c25565b602082019050919050565b60006020820190508181036000830152610c8a81610c4e565b9050919050565b6000610c9c826108d0565b9150610ca7836108d0565b925082821015610cba57610cb9610a6a565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cff826108d0565b9150610d0a836108d0565b925082610d1a57610d19610cc5565b5b828204905092915050565b6000819050919050565b610d3881610d25565b8114610d4357600080fd5b50565b600081519050610d5581610d2f565b92915050565b600060208284031215610d7157610d70610904565b5b6000610d7f84828501610d46565b91505092915050565b6000610d93826108d0565b9150610d9e836108d0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dd757610dd6610a6a565b5b82820290509291505056fea2646970667358221220c15f7cb52473d46cb19266638868a23770d01c4639461cd41e248bacbaac8c2564736f6c634300080f0033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80630917e776146100625780632e1a7d4d1461008d578063d0e30db0146100b6578063f6ed2017146100c0578063f8b2cb4f146100fd5761005d565b3661005d5761005b61013a565b005b600080fd5b34801561006e57600080fd5b506100776102f4565b60405161008491906108e9565b60405180910390f35b34801561009957600080fd5b506100b460048036038101906100af9190610935565b6102fc565b005b6100be61066c565b005b3480156100cc57600080fd5b506100e760048036038101906100e291906109c0565b610676565b6040516100f491906108e9565b60405180910390f35b34801561010957600080fd5b50610124600480360381019061011f91906109c0565b6106bf565b60405161013191906108e9565b60405180910390f35b60045434101561017f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017690610a4a565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905034826102179190610a99565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550426000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060008211156102b7576102b682823361070a565b5b7fe865f22f57d0ae46c9f05f6677e4138264cb541aeb2c4bc8c82e7a9b3dd4905a33346040516102e8929190610afe565b60405180910390a15050565b600047905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060008103610385576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037c90610b73565b60405180910390fd5b818110156103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90610c05565b60405180910390fd5b814710156103d557600080fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905060006202a3008261042c9190610a99565b905080421015610471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046890610c71565b60405180910390fd5b838361047d9190610c91565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506104cd83833361070a565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637b56c2b233836040518363ffffffff1660e01b81526004016105b3929190610afe565b600060405180830381600087803b1580156105cd57600080fd5b505af11580156105e1573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc869081150290604051600060405180830381858888f1935050505015801561062b573d6000803e3d6000fd5b507f59945647ef1c847843ee61b123cb5a2b68b6f77f1466683a5c6b7ecd4a8a1cc8338660405161065d929190610afe565b60405180910390a15050505050565b61067461013a565b565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b60006018603c80854261071d9190610c91565b6107279190610cf4565b6107319190610cf4565b61073b9190610cf4565b905060006768155a43676e000090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e15f4736040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dd9190610d5b565b9050600082670de0b6b3a7640000612710670de0b6b3a76400008a866108039190610d88565b61080d9190610cf4565b6108179190610cf4565b866108229190610d88565b61082c9190610d88565b6108369190610cf4565b905080600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108879190610a99565b925050819055507ff28ead80696c20d8f2c4b30fe0abc00926c4923c4390de2cdabb35f61074fd6d85826040516108bf929190610afe565b60405180910390a150505050505050565b6000819050919050565b6108e3816108d0565b82525050565b60006020820190506108fe60008301846108da565b92915050565b600080fd5b610912816108d0565b811461091d57600080fd5b50565b60008135905061092f81610909565b92915050565b60006020828403121561094b5761094a610904565b5b600061095984828501610920565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061098d82610962565b9050919050565b61099d81610982565b81146109a857600080fd5b50565b6000813590506109ba81610994565b92915050565b6000602082840312156109d6576109d5610904565b5b60006109e4848285016109ab565b91505092915050565b600082825260208201905092915050565b7f4d696e696d756d206465706f73697420697320302e3031204554480000000000600082015250565b6000610a34601b836109ed565b9150610a3f826109fe565b602082019050919050565b60006020820190508181036000830152610a6381610a27565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa4826108d0565b9150610aaf836108d0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ae457610ae3610a6a565b5b828201905092915050565b610af881610982565b82525050565b6000604082019050610b136000830185610aef565b610b2060208301846108da565b9392505050565b7f4163636f756e7420697320656d70747900000000000000000000000000000000600082015250565b6000610b5d6010836109ed565b9150610b6882610b27565b602082019050919050565b60006020820190508181036000830152610b8c81610b50565b9050919050565b7f43616e6e6f74207769746864726177206d6f7265207468616e20796f7572206360008201527f757272656e742062616c616e6365000000000000000000000000000000000000602082015250565b6000610bef602e836109ed565b9150610bfa82610b93565b604082019050919050565b60006020820190508181036000830152610c1e81610be2565b9050919050565b7f4465706f7369742069732074696d65206c6f636b656400000000000000000000600082015250565b6000610c5b6016836109ed565b9150610c6682610c25565b602082019050919050565b60006020820190508181036000830152610c8a81610c4e565b9050919050565b6000610c9c826108d0565b9150610ca7836108d0565b925082821015610cba57610cb9610a6a565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cff826108d0565b9150610d0a836108d0565b925082610d1a57610d19610cc5565b5b828204905092915050565b6000819050919050565b610d3881610d25565b8114610d4357600080fd5b50565b600081519050610d5581610d2f565b92915050565b600060208284031215610d7157610d70610904565b5b6000610d7f84828501610d46565b91505092915050565b6000610d93826108d0565b9150610d9e836108d0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dd757610dd6610a6a565b5b82820290509291505056fea2646970667358221220c15f7cb52473d46cb19266638868a23770d01c4639461cd41e248bacbaac8c2564736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1355:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:9",
                "type": ""
              }
            ],
            "src": "7:75:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:9"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:9"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:9",
                "type": ""
              }
            ],
            "src": "334:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:9",
                "type": ""
              }
            ],
            "src": "466:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:9"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:9",
                "type": ""
              }
            ],
            "src": "568:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:9"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:9",
                "type": ""
              }
            ],
            "src": "696:143:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "939:413:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "985:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "987:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "987:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "987:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "960:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "969:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "956:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "956:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "981:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "952:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "952:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "949:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1078:128:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1093:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1107:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1097:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1122:74:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1168:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1179:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1164:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1164:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1188:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1132:31:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1132:64:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1122:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1216:129:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1231:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1245:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1235:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1261:74:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1307:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1318:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1303:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1303:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1327:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1271:31:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1271:64:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1261:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "901:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "912:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "924:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "932:6:9",
                "type": ""
              }
            ],
            "src": "845:507:9"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8948:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:9",
                "type": ""
              }
            ],
            "src": "7:77:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:9"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:9",
                "type": ""
              }
            ],
            "src": "90:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "312:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "322:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "345:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "284:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "307:4:9",
                "type": ""
              }
            ],
            "src": "214:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "482:35:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "492:19:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "502:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "492:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "475:6:9",
                "type": ""
              }
            ],
            "src": "442:75:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "612:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "629:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "632:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "622:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "622:12:9"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "523:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "752:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "755:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "745:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "745:12:9"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "646:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "812:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "869:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "878:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "881:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "871:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "871:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "871:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "835:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "860:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "842:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "842:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "832:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "832:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "822:63:9"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "805:5:9",
                "type": ""
              }
            ],
            "src": "769:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "949:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "959:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "981:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "968:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "959:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1024:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "997:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "997:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "997:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "927:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "935:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "943:5:9",
                "type": ""
              }
            ],
            "src": "897:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1108:263:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1154:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1156:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1156:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1156:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1129:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1138:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1125:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1125:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1150:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1121:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1121:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1118:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1247:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1262:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1266:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1291:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1326:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1337:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1322:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1322:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1346:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1301:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1301:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1291:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1078:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1089:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1101:6:9",
                "type": ""
              }
            ],
            "src": "1042:329:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1422:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1432:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1447:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1454:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1443:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1443:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1432:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1404:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1414:7:9",
                "type": ""
              }
            ],
            "src": "1377:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1554:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1564:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1593:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1575:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1575:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1564:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1536:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1546:7:9",
                "type": ""
              }
            ],
            "src": "1509:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1654:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1711:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1720:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1723:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1713:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1713:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1713:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1677:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1702:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1684:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1684:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1674:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1674:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1667:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1667:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1664:63:9"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1647:5:9",
                "type": ""
              }
            ],
            "src": "1611:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1791:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1801:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1823:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1810:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1810:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1801:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1866:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1839:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1839:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1839:33:9"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1769:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1777:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1785:5:9",
                "type": ""
              }
            ],
            "src": "1739:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1950:263:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1996:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1998:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1998:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1998:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1971:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1980:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1967:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1967:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1992:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1963:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1963:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1960:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2089:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2104:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2118:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2108:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2133:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2168:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2179:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2164:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2164:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2188:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2143:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2143:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2133:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1920:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1931:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1943:6:9",
                "type": ""
              }
            ],
            "src": "1884:329:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2315:73:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2332:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2337:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2325:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2325:19:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2325:19:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2353:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2372:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2377:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2368:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2368:14:9"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2353:11:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2287:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2292:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2303:11:9",
                "type": ""
              }
            ],
            "src": "2219:169:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2500:71:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2522:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2530:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2518:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2518:14:9"
                      },
                      {
                        "hexValue": "4d696e696d756d206465706f73697420697320302e303120455448",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2534:29:9",
                        "type": "",
                        "value": "Minimum deposit is 0.01 ETH"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2511:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2511:53:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2511:53:9"
                }
              ]
            },
            "name": "store_literal_in_memory_87ec94e18d778b8da0c4e368cbf468c76efa582e04d748213047edf9ba739440",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2492:6:9",
                "type": ""
              }
            ],
            "src": "2394:177:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2723:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2733:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2799:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2804:2:9",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2740:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2740:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2733:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2905:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_87ec94e18d778b8da0c4e368cbf468c76efa582e04d748213047edf9ba739440",
                      "nodeType": "YulIdentifier",
                      "src": "2816:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2816:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2816:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2918:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2929:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2934:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2925:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2925:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2918:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_87ec94e18d778b8da0c4e368cbf468c76efa582e04d748213047edf9ba739440_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2711:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2719:3:9",
                "type": ""
              }
            ],
            "src": "2577:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3120:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3130:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3142:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3153:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3138:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3138:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3130:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3177:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3188:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3173:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3173:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3196:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3202:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3192:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3192:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3166:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3166:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3166:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3222:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3356:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_87ec94e18d778b8da0c4e368cbf468c76efa582e04d748213047edf9ba739440_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3230:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3230:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3222:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_87ec94e18d778b8da0c4e368cbf468c76efa582e04d748213047edf9ba739440__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3100:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3115:4:9",
                "type": ""
              }
            ],
            "src": "2949:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3402:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3419:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3422:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3412:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3412:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3412:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3516:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3519:4:9",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3509:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3509:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3509:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3540:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3543:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3533:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3533:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3533:15:9"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3374:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3604:261:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3614:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3637:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3619:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3619:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "3614:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3648:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3671:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3653:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3653:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "3648:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3811:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3813:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3813:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3813:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3732:1:9"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3739:66:9",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3807:1:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3735:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3735:74:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3729:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3729:81:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3726:107:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3843:16:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3854:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3857:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3850:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3850:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3843:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3591:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3594:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3600:3:9",
                "type": ""
              }
            ],
            "src": "3560:305:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3936:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3953:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3976:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3958:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3958:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3946:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3946:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3946:37:9"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3924:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3931:3:9",
                "type": ""
              }
            ],
            "src": "3871:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4121:206:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4131:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4143:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4154:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4139:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4139:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4131:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4211:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4224:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4235:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4220:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4220:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4167:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4167:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4167:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4292:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4305:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4316:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4301:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4301:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4248:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4248:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4248:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4085:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4097:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4105:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4116:4:9",
                "type": ""
              }
            ],
            "src": "3995:332:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4439:60:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4461:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4469:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4457:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4457:14:9"
                      },
                      {
                        "hexValue": "4163636f756e7420697320656d707479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4473:18:9",
                        "type": "",
                        "value": "Account is empty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4450:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4450:42:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4450:42:9"
                }
              ]
            },
            "name": "store_literal_in_memory_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4431:6:9",
                "type": ""
              }
            ],
            "src": "4333:166:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4651:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4661:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4727:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4732:2:9",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4668:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4668:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4661:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4833:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66",
                      "nodeType": "YulIdentifier",
                      "src": "4744:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4744:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4744:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4846:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4857:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4862:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4853:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4853:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4846:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4639:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4647:3:9",
                "type": ""
              }
            ],
            "src": "4505:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5048:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5058:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5070:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5081:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5066:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5066:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5058:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5105:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5116:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5101:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5101:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5124:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5130:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5120:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5120:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5094:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5094:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5094:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5150:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5284:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5158:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5158:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5150:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5028:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5043:4:9",
                "type": ""
              }
            ],
            "src": "4877:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5408:127:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5430:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5438:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5426:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5426:14:9"
                      },
                      {
                        "hexValue": "43616e6e6f74207769746864726177206d6f7265207468616e20796f75722063",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5442:34:9",
                        "type": "",
                        "value": "Cannot withdraw more than your c"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5419:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5419:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5419:58:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5498:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5506:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5494:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5494:15:9"
                      },
                      {
                        "hexValue": "757272656e742062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5511:16:9",
                        "type": "",
                        "value": "urrent balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5487:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5487:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5487:41:9"
                }
              ]
            },
            "name": "store_literal_in_memory_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5400:6:9",
                "type": ""
              }
            ],
            "src": "5302:233:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5687:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5697:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5763:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5768:2:9",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5704:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5704:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5697:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5869:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9",
                      "nodeType": "YulIdentifier",
                      "src": "5780:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5780:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5780:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5882:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5893:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5898:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5889:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5889:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5882:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5675:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5683:3:9",
                "type": ""
              }
            ],
            "src": "5541:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6084:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6094:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6106:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6117:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6102:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6102:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6094:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6141:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6152:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6137:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6137:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6160:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6166:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6156:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6156:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6130:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6130:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6130:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6186:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6320:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6194:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6194:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6186:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6064:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6079:4:9",
                "type": ""
              }
            ],
            "src": "5913:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6444:66:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6466:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6474:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6462:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6462:14:9"
                      },
                      {
                        "hexValue": "4465706f7369742069732074696d65206c6f636b6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6478:24:9",
                        "type": "",
                        "value": "Deposit is time locked"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6455:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6455:48:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6455:48:9"
                }
              ]
            },
            "name": "store_literal_in_memory_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6436:6:9",
                "type": ""
              }
            ],
            "src": "6338:172:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6662:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6672:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6738:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6743:2:9",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6679:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6679:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6672:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6844:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce",
                      "nodeType": "YulIdentifier",
                      "src": "6755:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6755:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6755:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6857:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6868:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6873:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6864:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6864:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6857:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6650:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6658:3:9",
                "type": ""
              }
            ],
            "src": "6516:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7059:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7069:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7081:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7092:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7077:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7077:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7069:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7116:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7127:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7112:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7112:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7135:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7141:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7131:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7131:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7105:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7105:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7105:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7161:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7295:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7169:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7169:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7161:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7039:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7054:4:9",
                "type": ""
              }
            ],
            "src": "6888:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7358:146:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7368:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7391:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7373:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7373:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7368:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7402:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7425:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7407:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7407:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7402:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7449:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7451:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7451:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7451:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7443:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7446:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7440:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7440:8:9"
                  },
                  "nodeType": "YulIf",
                  "src": "7437:34:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7481:17:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7493:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7496:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7489:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7489:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7481:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7344:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7347:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7353:4:9",
                "type": ""
              }
            ],
            "src": "7313:191:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7538:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7555:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7558:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7548:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7548:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7548:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7652:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7655:4:9",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7645:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7645:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7645:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7676:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7679:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7669:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7669:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7669:15:9"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "7510:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7738:143:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7748:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7771:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7753:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7753:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7748:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7782:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7805:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7787:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7787:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7782:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7829:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "7831:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7831:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7831:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7826:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7819:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7819:9:9"
                  },
                  "nodeType": "YulIf",
                  "src": "7816:35:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7861:14:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7870:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7873:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7866:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7866:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "7861:1:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7727:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7730:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "7736:1:9",
                "type": ""
              }
            ],
            "src": "7696:185:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7931:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7941:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7952:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7941:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7913:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7923:7:9",
                "type": ""
              }
            ],
            "src": "7887:76:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8011:78:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8067:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8076:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8079:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8069:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8069:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8069:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8034:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8058:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "8041:16:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8041:23:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8031:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8031:34:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8024:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8024:42:9"
                  },
                  "nodeType": "YulIf",
                  "src": "8021:62:9"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8004:5:9",
                "type": ""
              }
            ],
            "src": "7969:120:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8157:79:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8167:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8182:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8176:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8176:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8167:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8224:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "8198:25:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8198:32:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8198:32:9"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8135:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8143:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8151:5:9",
                "type": ""
              }
            ],
            "src": "8095:141:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8318:273:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8364:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "8366:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8366:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8366:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8339:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8348:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8335:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8335:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8360:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8331:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8331:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "8328:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8457:127:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8472:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8486:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8476:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8501:73:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8546:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8557:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8542:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8542:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8566:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "8511:30:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8511:63:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8501:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8288:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8299:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8311:6:9",
                "type": ""
              }
            ],
            "src": "8242:349:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8645:300:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8655:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8678:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8660:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8660:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8655:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8689:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8712:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8694:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8694:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8689:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8887:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8889:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8889:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8889:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8799:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8792:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8792:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8785:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8785:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8807:1:9"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8814:66:9",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8882:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "8810:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8810:74:9"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8804:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8804:81:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8781:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8781:105:9"
                  },
                  "nodeType": "YulIf",
                  "src": "8778:131:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8919:20:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8934:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8937:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "8930:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8930:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "8919:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8628:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8631:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "8637:7:9",
                "type": ""
              }
            ],
            "src": "8597:348:9"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_87ec94e18d778b8da0c4e368cbf468c76efa582e04d748213047edf9ba739440(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minimum deposit is 0.01 ETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_87ec94e18d778b8da0c4e368cbf468c76efa582e04d748213047edf9ba739440_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_87ec94e18d778b8da0c4e368cbf468c76efa582e04d748213047edf9ba739440(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_87ec94e18d778b8da0c4e368cbf468c76efa582e04d748213047edf9ba739440__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87ec94e18d778b8da0c4e368cbf468c76efa582e04d748213047edf9ba739440_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66(memPtr) {\n\n        mstore(add(memPtr, 0), \"Account is empty\")\n\n    }\n\n    function abi_encode_t_stringliteral_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot withdraw more than your c\")\n\n        mstore(add(memPtr, 32), \"urrent balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit is time locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "297:5491:1:-:0;;;585:17;567:35;;969:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1042:4;1024:11;;:23;;;;;;;;;;;;;;;;;;1085:9;1057:10;;:38;;;;;;;;;;;;;;;;;;969:133;;297:5491;;88:117:9;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;297:5491:1:-;;;;;;;",
  "deployedSourceMap": "297:5491:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5762:17;:15;:17::i;:::-;297:5491;;;;;3364:99;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4295:1255;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3910:70;;;:::i;:::-;;3584:128;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3067:120;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1302:663;1369:10;;1356:9;:23;;1348:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1422:17;1442:6;:18;1449:10;1442:18;;;;;;;;;;;;;;;:25;;;1422:45;;1477:23;1503:6;:18;1510:10;1503:18;;;;;;;;;;;;;;;:30;;;1477:56;;1627:9;1612:12;:24;;;;:::i;:::-;1584:6;:18;1591:10;1584:18;;;;;;;;;;;;;;;:25;;:52;;;;1679:15;1646:6;:18;1653:10;1646:18;;;;;;;;;;;;;;;:30;;:48;;;;1793:1;1778:12;:16;1775:112;;;1810:66;1831:12;1845:18;1865:10;1810:20;:66::i;:::-;1775:112;1918:40;1936:10;1948:9;1918:40;;;;;;;:::i;:::-;;;;;;;;1338:627;;1302:663::o;3364:99::-;3412:4;3435:21;3428:28;;3364:99;:::o;4295:1255::-;4391:14;4408:6;:18;4415:10;4408:18;;;;;;;;;;;;;;;:25;;;4391:42;;4464:1;4451:9;:14;4443:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;4517:7;4504:9;:20;;4496:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;4618:7;4593:21;:32;;4585:41;;;;;;4718:18;4739:6;:18;4746:10;4739:18;;;;;;;;;;;;;;;:30;;;4718:51;;4779:13;4811:6;4795:13;:22;;;;:::i;:::-;4779:38;;4854:8;4835:15;:27;;4827:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4977:7;4965:9;:19;;;;:::i;:::-;4937:6;:18;4944:10;4937:18;;;;;;;;;;;;;;;:25;;:47;;;;5058:58;5079:9;5090:13;5105:10;5058:20;:58::i;:::-;5126:18;5147:14;:26;5162:10;5147:26;;;;;;;;;;;;;;;;5126:47;;5212:1;5183:14;:26;5198:10;5183:26;;;;;;;;;;;;;;;:30;;;;5312:11;;;;;;;;;;;:18;;;5331:10;5343:13;5312:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5426:10;5418:28;;:37;5447:7;5418:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5504:39;5523:10;5535:7;5504:39;;;;;;;:::i;:::-;;;;;;;;4336:1214;;;;4295:1255;:::o;3910:70::-;3956:17;:15;:17::i;:::-;3910:70::o;3584:128::-;3655:4;3677:14;:28;3692:12;3677:28;;;;;;;;;;;;;;;;3670:35;;3584:128;;;:::o;3067:120::-;3131:4;3153:6;:20;3160:12;3153:20;;;;;;;;;;;;;;;:27;;;3146:34;;3067:120;;;:::o;2262:684::-;2401:10;2452:2;2447;2442;2433:5;2415:15;:23;;;;:::i;:::-;2414:30;;;;:::i;:::-;:35;;;;:::i;:::-;:40;;;;:::i;:::-;2401:53;;2464:13;2480:19;2464:35;;2529:13;2550:10;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2529:49;;2662:14;2782:8;2758:19;2746:5;2722:19;2710:7;2699:8;:18;;;;:::i;:::-;2697:44;;;;:::i;:::-;2695:56;;;;:::i;:::-;2685:5;:68;;;;:::i;:::-;2683:94;;;;:::i;:::-;2681:109;;;;:::i;:::-;2662:130;;2875:9;2843:14;:28;2858:12;2843:28;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;2900:39;2915:12;2929:9;2900:39;;;;;;;:::i;:::-;;;;;;;;2348:598;;;;2262:684;;;:::o;7:77:9:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:169::-;2303:11;2337:6;2332:3;2325:19;2377:4;2372:3;2368:14;2353:29;;2219:169;;;;:::o;2394:177::-;2534:29;2530:1;2522:6;2518:14;2511:53;2394:177;:::o;2577:366::-;2719:3;2740:67;2804:2;2799:3;2740:67;:::i;:::-;2733:74;;2816:93;2905:3;2816:93;:::i;:::-;2934:2;2929:3;2925:12;2918:19;;2577:366;;;:::o;2949:419::-;3115:4;3153:2;3142:9;3138:18;3130:26;;3202:9;3196:4;3192:20;3188:1;3177:9;3173:17;3166:47;3230:131;3356:4;3230:131;:::i;:::-;3222:139;;2949:419;;;:::o;3374:180::-;3422:77;3419:1;3412:88;3519:4;3516:1;3509:15;3543:4;3540:1;3533:15;3560:305;3600:3;3619:20;3637:1;3619:20;:::i;:::-;3614:25;;3653:20;3671:1;3653:20;:::i;:::-;3648:25;;3807:1;3739:66;3735:74;3732:1;3729:81;3726:107;;;3813:18;;:::i;:::-;3726:107;3857:1;3854;3850:9;3843:16;;3560:305;;;;:::o;3871:118::-;3958:24;3976:5;3958:24;:::i;:::-;3953:3;3946:37;3871:118;;:::o;3995:332::-;4116:4;4154:2;4143:9;4139:18;4131:26;;4167:71;4235:1;4224:9;4220:17;4211:6;4167:71;:::i;:::-;4248:72;4316:2;4305:9;4301:18;4292:6;4248:72;:::i;:::-;3995:332;;;;;:::o;4333:166::-;4473:18;4469:1;4461:6;4457:14;4450:42;4333:166;:::o;4505:366::-;4647:3;4668:67;4732:2;4727:3;4668:67;:::i;:::-;4661:74;;4744:93;4833:3;4744:93;:::i;:::-;4862:2;4857:3;4853:12;4846:19;;4505:366;;;:::o;4877:419::-;5043:4;5081:2;5070:9;5066:18;5058:26;;5130:9;5124:4;5120:20;5116:1;5105:9;5101:17;5094:47;5158:131;5284:4;5158:131;:::i;:::-;5150:139;;4877:419;;;:::o;5302:233::-;5442:34;5438:1;5430:6;5426:14;5419:58;5511:16;5506:2;5498:6;5494:15;5487:41;5302:233;:::o;5541:366::-;5683:3;5704:67;5768:2;5763:3;5704:67;:::i;:::-;5697:74;;5780:93;5869:3;5780:93;:::i;:::-;5898:2;5893:3;5889:12;5882:19;;5541:366;;;:::o;5913:419::-;6079:4;6117:2;6106:9;6102:18;6094:26;;6166:9;6160:4;6156:20;6152:1;6141:9;6137:17;6130:47;6194:131;6320:4;6194:131;:::i;:::-;6186:139;;5913:419;;;:::o;6338:172::-;6478:24;6474:1;6466:6;6462:14;6455:48;6338:172;:::o;6516:366::-;6658:3;6679:67;6743:2;6738:3;6679:67;:::i;:::-;6672:74;;6755:93;6844:3;6755:93;:::i;:::-;6873:2;6868:3;6864:12;6857:19;;6516:366;;;:::o;6888:419::-;7054:4;7092:2;7081:9;7077:18;7069:26;;7141:9;7135:4;7131:20;7127:1;7116:9;7112:17;7105:47;7169:131;7295:4;7169:131;:::i;:::-;7161:139;;6888:419;;;:::o;7313:191::-;7353:4;7373:20;7391:1;7373:20;:::i;:::-;7368:25;;7407:20;7425:1;7407:20;:::i;:::-;7402:25;;7446:1;7443;7440:8;7437:34;;;7451:18;;:::i;:::-;7437:34;7496:1;7493;7489:9;7481:17;;7313:191;;;;:::o;7510:180::-;7558:77;7555:1;7548:88;7655:4;7652:1;7645:15;7679:4;7676:1;7669:15;7696:185;7736:1;7753:20;7771:1;7753:20;:::i;:::-;7748:25;;7787:20;7805:1;7787:20;:::i;:::-;7782:25;;7826:1;7816:35;;7831:18;;:::i;:::-;7816:35;7873:1;7870;7866:9;7861:14;;7696:185;;;;:::o;7887:76::-;7923:7;7952:5;7941:16;;7887:76;;;:::o;7969:120::-;8041:23;8058:5;8041:23;:::i;:::-;8034:5;8031:34;8021:62;;8079:1;8076;8069:12;8021:62;7969:120;:::o;8095:141::-;8151:5;8182:6;8176:13;8167:22;;8198:32;8224:5;8198:32;:::i;:::-;8095:141;;;;:::o;8242:349::-;8311:6;8360:2;8348:9;8339:7;8335:23;8331:32;8328:119;;;8366:79;;:::i;:::-;8328:119;8486:1;8511:63;8566:7;8557:6;8546:9;8542:22;8511:63;:::i;:::-;8501:73;;8457:127;8242:349;;;;:::o;8597:348::-;8637:7;8660:20;8678:1;8660:20;:::i;:::-;8655:25;;8694:20;8712:1;8694:20;:::i;:::-;8689:25;;8882:1;8814:66;8810:74;8807:1;8804:81;8799:1;8792:9;8785:17;8781:105;8778:131;;;8889:18;;:::i;:::-;8778:131;8937:1;8934;8930:9;8919:20;;8597:348;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./FAM.sol\";\nimport \"./DataFeedETHUSD.sol\";\n\n/// @title Staking contract for ETH\n/// @notice This contract is used to stake ETH through the Family-Staking app\ncontract ETHStake {\n    // Variables\n    mapping(address => Stake) stakes;\n    mapping(address => uint) pendingRewards;\n\n    struct Stake {\n        uint amount;\n        uint depositDate;\n    }   \n\n    FAM private FAMInstance;\n    DataFeedETHUSD private ETHUSDFeed;\n\n    uint minDeposit = 10000000000000000;\n\n    // Events\n    event DepositRegistered(address userAddress, uint amount);\n    event WithdrawRegistered(address userAddress, uint amount);\n    event UpdatedRewards(address userAddress, uint amount);\n\n    /**\n     * @dev Require the address of the FAM token contract to be able to mint FAM to users\n     * @param _FAM address of the deployed contract\n     */\n    constructor(address _FAM, address _dataFeed) {\n        FAMInstance = FAM(_FAM);\n        ETHUSDFeed = DataFeedETHUSD(_dataFeed);\n    }\n\n    /**\n     * @dev Internal function that register the stake and calculate pending rewards. Used by the stake function and the default receive function. Emits a StakeRegistered event.\n     */ \n    function registerDeposit() internal {\n        require(msg.value >= minDeposit, \"Minimum deposit is 0.01 ETH\");\n\n        uint currentStake = stakes[msg.sender].amount;\n        uint currentDepositDate = stakes[msg.sender].depositDate;\n        // Updating the user stake first\n        stakes[msg.sender].amount = currentStake + msg.value;\n        stakes[msg.sender].depositDate = block.timestamp;\n        // We need to calculate the pending reward amount and store it\n        if(currentStake > 0) {\n            updatePendingRewards(currentStake, currentDepositDate, msg.sender);\n        }        \n        \n        emit DepositRegistered(msg.sender, msg.value);\n    }\n\n    /**\n     * @notice Updates the pending rewards balance of the user\n     * @dev never called from outside of the contract\n     * @param _stakes stake balance of the user\n     * @param _from uint date of last deposit / to calcul from\n     * @param _userAddress address of the user\n     */\n    function updatePendingRewards(uint _stakes, uint _from, address _userAddress) internal{\n        // calculating nbDay since deposit\n        uint nbDay = (block.timestamp - _from) / 60 / 60 / 24;\n        uint FAMValue = 7500000000000000000; // Converted to WEI\n        uint ETHValue = uint(ETHUSDFeed.getLatestPrice());\n        // FAMValue / (NbJour * (0,01% * ((ETHValue * _stakes) / 10^18)))\n        uint FAMReward = ( ( ( nbDay * ( ( ( ETHValue * _stakes ) / 1000000000000000000 ) / 10000 ) ) * 1000000000000000000 ) / FAMValue );\n        // Updating user pending balance\n        pendingRewards[_userAddress] += FAMReward;\n\n        emit UpdatedRewards(_userAddress, FAMReward);\n    }\n\n    /**\n     * @notice Return the provided address balance\n     * @param _userAddress address of the user\n     */ \n    function getBalance(address _userAddress) view external returns(uint){\n        return stakes[_userAddress].amount;\n    }\n\n    /**\n     * @notice Return the total staked DAI tokens \n     * @dev Calls the balanceOf ERC20 function to return the total staked DAI tokens on this contract \n     */ \n    function getTotalStaked() view external returns(uint) {\n        return address(this).balance;\n    }\n\n    /**\n     * @notice Return a user pending reward balance\n     * @param _userAddress address of the user\n     */\n    function getPendingRewards(address _userAddress) view external returns(uint){\n        return pendingRewards[_userAddress];\n    }\n\n    /**\n     * @notice Allow user to stake an amount of ETH and to add this amount to their balance.\n     * @dev Calls the registerStake internal function to process the user balance\n     */ \n    function deposit() payable external {\n        registerDeposit();\n    }\n\n    /**\n     * @notice Allow user to unstake an amount of ETH from their account if balance is sufficient. There is a timelock on deposit of 2 days.\n     * @dev Will revert if the contract ETH balance is not sufficient to fullfill the withdrawal\n     * @param _amount uint - Number of wei to withdraw\n     */\n    function withdraw(uint _amount) external {\n        // verifications on the user balance\n        uint userStake = stakes[msg.sender].amount;\n        require(userStake != 0, \"Account is empty\");\n        require(userStake >= _amount, \"Cannot withdraw more than your current balance\");\n        require(address(this).balance >= _amount);\n        // Storing the current date of reference and calculating the lock release\n        uint referenceDate = stakes[msg.sender].depositDate;\n        uint timeLock = referenceDate + 2 days;\n        require(block.timestamp >= timeLock, \"Deposit is time locked\");\n\n        // Updating the user's stake\n        stakes[msg.sender].amount = userStake - _amount;\n\n        // Calculating and updating the pending rewards amount\n        updatePendingRewards(userStake, referenceDate, msg.sender);\n        uint rewardsToMint = pendingRewards[msg.sender];\n        pendingRewards[msg.sender] = 0;\n        // Minting the rewards to the user using the faucet function of the FAM contract\n        FAMInstance.faucet(msg.sender, rewardsToMint);\n        // Transfering back the amount to the user\n        payable(msg.sender).transfer(_amount);\n        // TODO Error management\n\n        emit WithdrawRegistered(msg.sender, _amount);\n    }\n\n    /**\n     * @notice Fallback function to receive ETH from a transfer or a send. Please note that this is not the preferred method of staking on this contract.\n     */\n    receive() external payable{\n        registerDeposit();\n    }\n}",
  "sourcePath": "/home/yohann/code/Family-staking/truffle/contracts/ETHStake.sol",
  "ast": {
    "absolutePath": "project:/contracts/ETHStake.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        570
      ],
      "Context": [
        1394
      ],
      "DataFeedETHUSD": [
        53
      ],
      "ERC20": [
        1269
      ],
      "ETHStake": [
        432
      ],
      "FAM": [
        524
      ],
      "IERC20": [
        1347
      ],
      "IERC20Metadata": [
        1372
      ],
      "Ownable": [
        683
      ]
    },
    "id": 433,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 55,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 56,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 433,
        "sourceUnit": 1348,
        "src": "58:72:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/FAM.sol",
        "file": "./FAM.sol",
        "id": 57,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 433,
        "sourceUnit": 525,
        "src": "131:19:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/DataFeedETHUSD.sol",
        "file": "./DataFeedETHUSD.sol",
        "id": 58,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 433,
        "sourceUnit": 54,
        "src": "151:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ETHStake",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 59,
          "nodeType": "StructuredDocumentation",
          "src": "183:114:1",
          "text": "@title Staking contract for ETH\n @notice This contract is used to stake ETH through the Family-Staking app"
        },
        "fullyImplemented": true,
        "id": 432,
        "linearizedBaseContracts": [
          432
        ],
        "name": "ETHStake",
        "nameLocation": "306:8:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 64,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "364:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 432,
            "src": "338:32:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$73_storage_$",
              "typeString": "mapping(address => struct ETHStake.Stake)"
            },
            "typeName": {
              "id": 63,
              "keyType": {
                "id": 60,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "346:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "338:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$73_storage_$",
                "typeString": "mapping(address => struct ETHStake.Stake)"
              },
              "valueType": {
                "id": 62,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 61,
                  "name": "Stake",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73,
                  "src": "357:5:1"
                },
                "referencedDeclaration": 73,
                "src": "357:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stake_$73_storage_ptr",
                  "typeString": "struct ETHStake.Stake"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 68,
            "mutability": "mutable",
            "name": "pendingRewards",
            "nameLocation": "401:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 432,
            "src": "376:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 67,
              "keyType": {
                "id": 65,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "384:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "376:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 66,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "395:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "ETHStake.Stake",
            "id": 73,
            "members": [
              {
                "constant": false,
                "id": 70,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "450:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "445:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 69,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "445:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 72,
                "mutability": "mutable",
                "name": "depositDate",
                "nameLocation": "471:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "466:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 71,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "466:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stake",
            "nameLocation": "429:5:1",
            "nodeType": "StructDefinition",
            "scope": 432,
            "src": "422:67:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 76,
            "mutability": "mutable",
            "name": "FAMInstance",
            "nameLocation": "510:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 432,
            "src": "498:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FAM_$524",
              "typeString": "contract FAM"
            },
            "typeName": {
              "id": 75,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 74,
                "name": "FAM",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 524,
                "src": "498:3:1"
              },
              "referencedDeclaration": 524,
              "src": "498:3:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FAM_$524",
                "typeString": "contract FAM"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 79,
            "mutability": "mutable",
            "name": "ETHUSDFeed",
            "nameLocation": "550:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 432,
            "src": "527:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DataFeedETHUSD_$53",
              "typeString": "contract DataFeedETHUSD"
            },
            "typeName": {
              "id": 78,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 77,
                "name": "DataFeedETHUSD",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53,
                "src": "527:14:1"
              },
              "referencedDeclaration": 53,
              "src": "527:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DataFeedETHUSD_$53",
                "typeString": "contract DataFeedETHUSD"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 82,
            "mutability": "mutable",
            "name": "minDeposit",
            "nameLocation": "572:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 432,
            "src": "567:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 80,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "567:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030303030303030303030303030",
              "id": 81,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "585:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "10000000000000000"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "e865f22f57d0ae46c9f05f6677e4138264cb541aeb2c4bc8c82e7a9b3dd4905a",
            "id": 88,
            "name": "DepositRegistered",
            "nameLocation": "629:17:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "655:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "647:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "647:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "673:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "668:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "646:34:1"
            },
            "src": "623:58:1"
          },
          {
            "anonymous": false,
            "eventSelector": "59945647ef1c847843ee61b123cb5a2b68b6f77f1466683a5c6b7ecd4a8a1cc8",
            "id": 94,
            "name": "WithdrawRegistered",
            "nameLocation": "692:18:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "719:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "711:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "737:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "732:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "732:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:34:1"
            },
            "src": "686:59:1"
          },
          {
            "anonymous": false,
            "eventSelector": "f28ead80696c20d8f2c4b30fe0abc00926c4923c4390de2cdabb35f61074fd6d",
            "id": 100,
            "name": "UpdatedRewards",
            "nameLocation": "756:14:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "779:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "771:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "797:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "792:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "770:34:1"
            },
            "src": "750:55:1"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "1014:88:1",
              "statements": [
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 108,
                      "name": "FAMInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "1024:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FAM_$524",
                        "typeString": "contract FAM"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 110,
                          "name": "_FAM",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "1042:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 109,
                        "name": "FAM",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "1038:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FAM_$524_$",
                          "typeString": "type(contract FAM)"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1038:9:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FAM_$524",
                        "typeString": "contract FAM"
                      }
                    },
                    "src": "1024:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FAM_$524",
                      "typeString": "contract FAM"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:23:1"
                },
                {
                  "expression": {
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 114,
                      "name": "ETHUSDFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1057:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DataFeedETHUSD_$53",
                        "typeString": "contract DataFeedETHUSD"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 116,
                          "name": "_dataFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "1085:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 115,
                        "name": "DataFeedETHUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1070:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DataFeedETHUSD_$53_$",
                          "typeString": "type(contract DataFeedETHUSD)"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1070:25:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DataFeedETHUSD_$53",
                        "typeString": "contract DataFeedETHUSD"
                      }
                    },
                    "src": "1057:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DataFeedETHUSD_$53",
                      "typeString": "contract DataFeedETHUSD"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:38:1"
                }
              ]
            },
            "documentation": {
              "id": 101,
              "nodeType": "StructuredDocumentation",
              "src": "811:153:1",
              "text": " @dev Require the address of the FAM token contract to be able to mint FAM to users\n @param _FAM address of the deployed contract"
            },
            "id": 121,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "_FAM",
                  "nameLocation": "989:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "981:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "_dataFeed",
                  "nameLocation": "1003:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "995:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "980:33:1"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1014:0:1"
            },
            "scope": 432,
            "src": "969:133:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "1338:627:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 126,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1356:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1356:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 128,
                          "name": "minDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "1369:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1356:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e696d756d206465706f73697420697320302e303120455448",
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1381:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87ec94e18d778b8da0c4e368cbf468c76efa582e04d748213047edf9ba739440",
                          "typeString": "literal_string \"Minimum deposit is 0.01 ETH\""
                        },
                        "value": "Minimum deposit is 0.01 ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87ec94e18d778b8da0c4e368cbf468c76efa582e04d748213047edf9ba739440",
                          "typeString": "literal_string \"Minimum deposit is 0.01 ETH\""
                        }
                      ],
                      "id": 125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1348:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1348:63:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1348:63:1"
                },
                {
                  "assignments": [
                    134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 134,
                      "mutability": "mutable",
                      "name": "currentStake",
                      "nameLocation": "1427:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 188,
                      "src": "1422:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 133,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1422:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 140,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 135,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1442:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$73_storage_$",
                          "typeString": "mapping(address => struct ETHStake.Stake storage ref)"
                        }
                      },
                      "id": 138,
                      "indexExpression": {
                        "expression": {
                          "id": 136,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1449:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1449:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1442:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$73_storage",
                        "typeString": "struct ETHStake.Stake storage ref"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 70,
                    "src": "1442:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1422:45:1"
                },
                {
                  "assignments": [
                    142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 142,
                      "mutability": "mutable",
                      "name": "currentDepositDate",
                      "nameLocation": "1482:18:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 188,
                      "src": "1477:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 141,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1477:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 148,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 143,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1503:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$73_storage_$",
                          "typeString": "mapping(address => struct ETHStake.Stake storage ref)"
                        }
                      },
                      "id": 146,
                      "indexExpression": {
                        "expression": {
                          "id": 144,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1510:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1510:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1503:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$73_storage",
                        "typeString": "struct ETHStake.Stake storage ref"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "depositDate",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 72,
                    "src": "1503:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1477:56:1"
                },
                {
                  "expression": {
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 149,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1584:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$73_storage_$",
                            "typeString": "mapping(address => struct ETHStake.Stake storage ref)"
                          }
                        },
                        "id": 152,
                        "indexExpression": {
                          "expression": {
                            "id": 150,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1591:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1591:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1584:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$73_storage",
                          "typeString": "struct ETHStake.Stake storage ref"
                        }
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "1584:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 154,
                        "name": "currentStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "1612:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 155,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1627:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1627:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1612:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1584:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:52:1"
                },
                {
                  "expression": {
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 160,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1646:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$73_storage_$",
                            "typeString": "mapping(address => struct ETHStake.Stake storage ref)"
                          }
                        },
                        "id": 163,
                        "indexExpression": {
                          "expression": {
                            "id": 161,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1653:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1653:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1646:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$73_storage",
                          "typeString": "struct ETHStake.Stake storage ref"
                        }
                      },
                      "id": 164,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "depositDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "1646:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 165,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1679:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1679:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1646:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "1646:48:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 169,
                      "name": "currentStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "1778:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1793:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1778:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 180,
                  "nodeType": "IfStatement",
                  "src": "1775:112:1",
                  "trueBody": {
                    "id": 179,
                    "nodeType": "Block",
                    "src": "1796:91:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 173,
                              "name": "currentStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 134,
                              "src": "1831:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 174,
                              "name": "currentDepositDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 142,
                              "src": "1845:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 175,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1865:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1865:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 172,
                            "name": "updatePendingRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 260,
                            "src": "1810:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,address)"
                            }
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1810:66:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 178,
                        "nodeType": "ExpressionStatement",
                        "src": "1810:66:1"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 182,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1936:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1936:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 184,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1948:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1948:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 181,
                      "name": "DepositRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "1918:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1918:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 187,
                  "nodeType": "EmitStatement",
                  "src": "1913:45:1"
                }
              ]
            },
            "documentation": {
              "id": 122,
              "nodeType": "StructuredDocumentation",
              "src": "1108:188:1",
              "text": " @dev Internal function that register the stake and calculate pending rewards. Used by the stake function and the default receive function. Emits a StakeRegistered event."
            },
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerDeposit",
            "nameLocation": "1311:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1326:2:1"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1338:0:1"
            },
            "scope": 432,
            "src": "1302:663:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 259,
              "nodeType": "Block",
              "src": "2348:598:1",
              "statements": [
                {
                  "assignments": [
                    200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 200,
                      "mutability": "mutable",
                      "name": "nbDay",
                      "nameLocation": "2406:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 259,
                      "src": "2401:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 199,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2401:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 212,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 201,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "2415:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "2415:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 203,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 194,
                                "src": "2433:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2415:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 205,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2414:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2442:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "2414:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "3630",
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2447:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      "src": "2414:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3234",
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2452:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_24_by_1",
                        "typeString": "int_const 24"
                      },
                      "value": "24"
                    },
                    "src": "2414:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2401:53:1"
                },
                {
                  "assignments": [
                    214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 214,
                      "mutability": "mutable",
                      "name": "FAMValue",
                      "nameLocation": "2469:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 259,
                      "src": "2464:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 213,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2464:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 216,
                  "initialValue": {
                    "hexValue": "37353030303030303030303030303030303030",
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2480:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_7500000000000000000_by_1",
                      "typeString": "int_const 7500000000000000000"
                    },
                    "value": "7500000000000000000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2464:35:1"
                },
                {
                  "assignments": [
                    218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 218,
                      "mutability": "mutable",
                      "name": "ETHValue",
                      "nameLocation": "2534:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 259,
                      "src": "2529:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 217,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2529:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 225,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 221,
                            "name": "ETHUSDFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "2550:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DataFeedETHUSD_$53",
                              "typeString": "contract DataFeedETHUSD"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getLatestPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44,
                          "src": "2550:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                            "typeString": "function () view external returns (int256)"
                          }
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2550:27:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2545:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 219,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2545:4:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2545:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2529:49:1"
                },
                {
                  "assignments": [
                    227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 227,
                      "mutability": "mutable",
                      "name": "FAMReward",
                      "nameLocation": "2667:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 259,
                      "src": "2662:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 226,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2662:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 247,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 239,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 228,
                                      "name": "nbDay",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 200,
                                      "src": "2685:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 237,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 234,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 231,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 229,
                                                        "name": "ETHValue",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 218,
                                                        "src": "2699:8:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "*",
                                                      "rightExpression": {
                                                        "id": 230,
                                                        "name": "_stakes",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 192,
                                                        "src": "2710:7:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "2699:18:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 232,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "2697:22:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "/",
                                                "rightExpression": {
                                                  "hexValue": "31303030303030303030303030303030303030",
                                                  "id": 233,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "2722:19:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                    "typeString": "int_const 1000000000000000000"
                                                  },
                                                  "value": "1000000000000000000"
                                                },
                                                "src": "2697:44:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 235,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "2695:48:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "/",
                                          "rightExpression": {
                                            "hexValue": "3130303030",
                                            "id": 236,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2746:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10000_by_1",
                                              "typeString": "int_const 10000"
                                            },
                                            "value": "10000"
                                          },
                                          "src": "2695:56:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 238,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "2693:60:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2685:68:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 240,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2683:72:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "31303030303030303030303030303030303030",
                                "id": 241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2758:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1000000000000000000"
                              },
                              "src": "2683:94:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 243,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2681:98:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 244,
                          "name": "FAMValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "2782:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2681:109:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 246,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2679:113:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2662:130:1"
                },
                {
                  "expression": {
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 248,
                        "name": "pendingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "2843:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 250,
                      "indexExpression": {
                        "id": 249,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "2858:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2843:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 251,
                      "name": "FAMReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "2875:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2843:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "2843:41:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 255,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "2915:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 256,
                        "name": "FAMReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "2929:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 254,
                      "name": "UpdatedRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "2900:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2900:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "EmitStatement",
                  "src": "2895:44:1"
                }
              ]
            },
            "documentation": {
              "id": 190,
              "nodeType": "StructuredDocumentation",
              "src": "1971:286:1",
              "text": " @notice Updates the pending rewards balance of the user\n @dev never called from outside of the contract\n @param _stakes stake balance of the user\n @param _from uint date of last deposit / to calcul from\n @param _userAddress address of the user"
            },
            "id": 260,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePendingRewards",
            "nameLocation": "2271:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "_stakes",
                  "nameLocation": "2297:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "2292:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2292:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2311:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "2306:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2306:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nameLocation": "2326:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "2318:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2318:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2291:48:1"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2348:0:1"
            },
            "scope": 432,
            "src": "2262:684:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "3136:51:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 268,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "3153:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$73_storage_$",
                          "typeString": "mapping(address => struct ETHStake.Stake storage ref)"
                        }
                      },
                      "id": 270,
                      "indexExpression": {
                        "id": 269,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "3160:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3153:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$73_storage",
                        "typeString": "struct ETHStake.Stake storage ref"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 70,
                    "src": "3153:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 267,
                  "id": 272,
                  "nodeType": "Return",
                  "src": "3146:34:1"
                }
              ]
            },
            "documentation": {
              "id": 261,
              "nodeType": "StructuredDocumentation",
              "src": "2952:109:1",
              "text": " @notice Return the provided address balance\n @param _userAddress address of the user"
            },
            "functionSelector": "f8b2cb4f",
            "id": 274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "3076:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nameLocation": "3095:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "3087:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3087:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3086:22:1"
            },
            "returnParameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "3131:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3131:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3130:6:1"
            },
            "scope": 432,
            "src": "3067:120:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 286,
              "nodeType": "Block",
              "src": "3418:45:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 282,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "3443:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ETHStake_$432",
                            "typeString": "contract ETHStake"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ETHStake_$432",
                            "typeString": "contract ETHStake"
                          }
                        ],
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3435:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3435:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3435:13:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "3435:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 279,
                  "id": 285,
                  "nodeType": "Return",
                  "src": "3428:28:1"
                }
              ]
            },
            "documentation": {
              "id": 275,
              "nodeType": "StructuredDocumentation",
              "src": "3193:165:1",
              "text": " @notice Return the total staked DAI tokens \n @dev Calls the balanceOf ERC20 function to return the total staked DAI tokens on this contract "
            },
            "functionSelector": "0917e776",
            "id": 287,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStaked",
            "nameLocation": "3373:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3387:2:1"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 287,
                  "src": "3412:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3412:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3411:6:1"
            },
            "scope": 432,
            "src": "3364:99:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "3660:52:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 295,
                      "name": "pendingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "3677:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 297,
                    "indexExpression": {
                      "id": 296,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "3692:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3677:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 294,
                  "id": 298,
                  "nodeType": "Return",
                  "src": "3670:35:1"
                }
              ]
            },
            "documentation": {
              "id": 288,
              "nodeType": "StructuredDocumentation",
              "src": "3469:110:1",
              "text": " @notice Return a user pending reward balance\n @param _userAddress address of the user"
            },
            "functionSelector": "f6ed2017",
            "id": 300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingRewards",
            "nameLocation": "3593:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nameLocation": "3619:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "3611:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3611:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3610:22:1"
            },
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "3655:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3655:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3654:6:1"
            },
            "scope": 432,
            "src": "3584:128:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "3946:34:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 304,
                      "name": "registerDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "3956:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3956:17:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "3956:17:1"
                }
              ]
            },
            "documentation": {
              "id": 301,
              "nodeType": "StructuredDocumentation",
              "src": "3718:186:1",
              "text": " @notice Allow user to stake an amount of ETH and to add this amount to their balance.\n @dev Calls the registerStake internal function to process the user balance"
            },
            "functionSelector": "d0e30db0",
            "id": 308,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "3919:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3926:2:1"
            },
            "returnParameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3946:0:1"
            },
            "scope": 432,
            "src": "3910:70:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 422,
              "nodeType": "Block",
              "src": "4336:1214:1",
              "statements": [
                {
                  "assignments": [
                    315
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 315,
                      "mutability": "mutable",
                      "name": "userStake",
                      "nameLocation": "4396:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 422,
                      "src": "4391:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 314,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4391:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 321,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 316,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "4408:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$73_storage_$",
                          "typeString": "mapping(address => struct ETHStake.Stake storage ref)"
                        }
                      },
                      "id": 319,
                      "indexExpression": {
                        "expression": {
                          "id": 317,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4415:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4415:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4408:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$73_storage",
                        "typeString": "struct ETHStake.Stake storage ref"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 70,
                    "src": "4408:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4391:42:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 323,
                          "name": "userStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "4451:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4464:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4451:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e7420697320656d707479",
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4467:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66",
                          "typeString": "literal_string \"Account is empty\""
                        },
                        "value": "Account is empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66",
                          "typeString": "literal_string \"Account is empty\""
                        }
                      ],
                      "id": 322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4443:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4443:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "4443:43:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 330,
                          "name": "userStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "4504:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 331,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "4517:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4504:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74207769746864726177206d6f7265207468616e20796f75722063757272656e742062616c616e6365",
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4526:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9",
                          "typeString": "literal_string \"Cannot withdraw more than your current balance\""
                        },
                        "value": "Cannot withdraw more than your current balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9",
                          "typeString": "literal_string \"Cannot withdraw more than your current balance\""
                        }
                      ],
                      "id": 329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4496:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4496:79:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "4496:79:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 339,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "4601:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ETHStake_$432",
                                  "typeString": "contract ETHStake"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ETHStake_$432",
                                  "typeString": "contract ETHStake"
                                }
                              ],
                              "id": 338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4593:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 337,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4593:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4593:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "4593:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 342,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "4618:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4593:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4585:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4585:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "4585:41:1"
                },
                {
                  "assignments": [
                    347
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 347,
                      "mutability": "mutable",
                      "name": "referenceDate",
                      "nameLocation": "4723:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 422,
                      "src": "4718:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 346,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4718:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 353,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 348,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "4739:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$73_storage_$",
                          "typeString": "mapping(address => struct ETHStake.Stake storage ref)"
                        }
                      },
                      "id": 351,
                      "indexExpression": {
                        "expression": {
                          "id": 349,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4746:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4746:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4739:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$73_storage",
                        "typeString": "struct ETHStake.Stake storage ref"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "depositDate",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 72,
                    "src": "4739:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4718:51:1"
                },
                {
                  "assignments": [
                    355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 355,
                      "mutability": "mutable",
                      "name": "timeLock",
                      "nameLocation": "4784:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 422,
                      "src": "4779:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 354,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4779:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 359,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 356,
                      "name": "referenceDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 347,
                      "src": "4795:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4811:6:1",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_172800_by_1",
                        "typeString": "int_const 172800"
                      },
                      "value": "2"
                    },
                    "src": "4795:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4779:38:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 361,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4835:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4835:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 363,
                          "name": "timeLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 355,
                          "src": "4854:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4835:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f7369742069732074696d65206c6f636b6564",
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4864:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce",
                          "typeString": "literal_string \"Deposit is time locked\""
                        },
                        "value": "Deposit is time locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce",
                          "typeString": "literal_string \"Deposit is time locked\""
                        }
                      ],
                      "id": 360,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4827:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4827:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 367,
                  "nodeType": "ExpressionStatement",
                  "src": "4827:62:1"
                },
                {
                  "expression": {
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 368,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "4937:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$73_storage_$",
                            "typeString": "mapping(address => struct ETHStake.Stake storage ref)"
                          }
                        },
                        "id": 371,
                        "indexExpression": {
                          "expression": {
                            "id": 369,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4944:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4944:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4937:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$73_storage",
                          "typeString": "struct ETHStake.Stake storage ref"
                        }
                      },
                      "id": 372,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "4937:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 373,
                        "name": "userStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "4965:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 374,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "4977:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4965:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4937:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "4937:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 379,
                        "name": "userStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "5079:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 380,
                        "name": "referenceDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "5090:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 381,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5105:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5105:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 378,
                      "name": "updatePendingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 260,
                      "src": "5058:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5058:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "5058:58:1"
                },
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "rewardsToMint",
                      "nameLocation": "5131:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 422,
                      "src": "5126:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5126:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 391,
                  "initialValue": {
                    "baseExpression": {
                      "id": 387,
                      "name": "pendingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "5147:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 390,
                    "indexExpression": {
                      "expression": {
                        "id": 388,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5162:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5162:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5147:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5126:47:1"
                },
                {
                  "expression": {
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 392,
                        "name": "pendingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "5183:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 395,
                      "indexExpression": {
                        "expression": {
                          "id": 393,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5198:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5198:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5183:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5212:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5183:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "5183:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 402,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5331:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5331:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 404,
                        "name": "rewardsToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "5343:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 399,
                        "name": "FAMInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "5312:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FAM_$524",
                          "typeString": "contract FAM"
                        }
                      },
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "faucet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 498,
                      "src": "5312:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5312:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 406,
                  "nodeType": "ExpressionStatement",
                  "src": "5312:45:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 413,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "5447:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 409,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5426:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5426:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5418:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 407,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5418:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5418:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5418:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5418:37:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "5418:37:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 417,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5523:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5523:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 419,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "5535:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 416,
                      "name": "WithdrawRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "5504:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5504:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 421,
                  "nodeType": "EmitStatement",
                  "src": "5499:44:1"
                }
              ]
            },
            "documentation": {
              "id": 309,
              "nodeType": "StructuredDocumentation",
              "src": "3986:304:1",
              "text": " @notice Allow user to unstake an amount of ETH from their account if balance is sufficient. There is a timelock on deposit of 2 days.\n @dev Will revert if the contract ETH balance is not sufficient to fullfill the withdrawal\n @param _amount uint - Number of wei to withdraw"
            },
            "functionSelector": "2e1a7d4d",
            "id": 423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "4304:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4318:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 423,
                  "src": "4313:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4313:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4312:14:1"
            },
            "returnParameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4336:0:1"
            },
            "scope": 432,
            "src": "4295:1255:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "5752:34:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 427,
                      "name": "registerDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "5762:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5762:17:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "5762:17:1"
                }
              ]
            },
            "documentation": {
              "id": 424,
              "nodeType": "StructuredDocumentation",
              "src": "5556:165:1",
              "text": " @notice Fallback function to receive ETH from a transfer or a send. Please note that this is not the preferred method of staking on this contract."
            },
            "id": 431,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5733:2:1"
            },
            "returnParameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5752:0:1"
            },
            "scope": 432,
            "src": "5726:60:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 433,
        "src": "297:5491:1",
        "usedErrors": []
      }
    ],
    "src": "33:5755:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {},
      "links": {},
      "address": "0xc68dBB804995729176b9773Ff29500144e9E2Bd5",
      "transactionHash": "0x50c5cba60d982ef816fddb368cc35b4018ec1c861e983e7a4a79debd3665db87"
    },
    "1659873198463": {
      "events": {},
      "links": {},
      "address": "0x5Ad73723d305C507831e4FdCa8695a0151729B49",
      "transactionHash": "0x21a71125cec506b675f50bc8e01e7b30225f2c2746c04fc6a171ae02429a5e6f"
    },
    "1659904526396": {
      "events": {},
      "links": {},
      "address": "0xeA907737947D6E7106afaD3f2Ce53524356B53fF",
      "transactionHash": "0xe14ae42128ae8cfc9c6747f64353ae44bcb02bbe22bee2982f34888408737a2d"
    },
    "1659906782522": {
      "events": {},
      "links": {},
      "address": "0x9e921953F50b0104E718293A3034995d97ca1ca1",
      "transactionHash": "0xfc6a2f99a667785659db947bdaa27e5f2a69e847047457e10ffeb5d32be847d3"
    }
  },
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-08-07T21:53:06.053Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Require the address of the FAM token contract to be able to mint FAM to users",
        "params": {
          "_FAM": "address of the deployed contract"
        }
      },
      "deposit()": {
        "details": "Calls the registerStake internal function to process the user balance"
      },
      "getBalance(address)": {
        "params": {
          "_userAddress": "address of the user"
        }
      },
      "getPendingRewards(address)": {
        "params": {
          "_userAddress": "address of the user"
        }
      },
      "getTotalStaked()": {
        "details": "Calls the balanceOf ERC20 function to return the total staked DAI tokens on this contract "
      },
      "withdraw(uint256)": {
        "details": "Will revert if the contract ETH balance is not sufficient to fullfill the withdrawal",
        "params": {
          "_amount": "uint - Number of wei to withdraw"
        }
      }
    },
    "title": "Staking contract for ETH",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deposit()": {
        "notice": "Allow user to stake an amount of ETH and to add this amount to their balance."
      },
      "getBalance(address)": {
        "notice": "Return the provided address balance"
      },
      "getPendingRewards(address)": {
        "notice": "Return a user pending reward balance"
      },
      "getTotalStaked()": {
        "notice": "Return the total staked DAI tokens "
      },
      "withdraw(uint256)": {
        "notice": "Allow user to unstake an amount of ETH from their account if balance is sufficient. There is a timelock on deposit of 2 days."
      }
    },
    "notice": "This contract is used to stake ETH through the Family-Staking app",
    "version": 1
  }
}