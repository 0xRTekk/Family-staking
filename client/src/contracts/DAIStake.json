{
  "contractName": "DAIStake",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_DAI",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_FAM",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DepositRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UpdatedRewards",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawRegistered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getStakedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTotalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getPendingRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_DAI\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_FAM\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UpdatedRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getPendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getStakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Can pass the DAI token's address from the kovan network : 0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa to use the ERC20 functions\",\"params\":{\"_DAI\":\"ERC20 DAI token contract address\",\"_FAM\":\"address of the deployed contract\"}},\"deposit(uint256)\":{\"details\":\"Calls the registerStake internal function to process the user balance\"},\"getPendingRewards(address)\":{\"params\":{\"_userAddress\":\"address of the user\"}},\"getStakedBalance(address)\":{\"params\":{\"_userAddress\":\"address of the user\"}},\"getTotalStaked()\":{\"details\":\"Calls the balanceOf ERC20 function to return the total staked DAI tokens on this contract \"},\"withdraw(uint256)\":{\"details\":\"Will revert if the contract DAI balance is not sufficient to fullfill the withdrawal\",\"params\":{\"_amount\":\"uint - Number of wei to withdraw\"}}},\"title\":\"Staking contract for ETH\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256)\":{\"notice\":\"Allow user to stake an amount of DAI and to add this amount to their balance.\"},\"getPendingRewards(address)\":{\"notice\":\"Return a user pending reward balance\"},\"getStakedBalance(address)\":{\"notice\":\"Return the provided address staked token's balance\"},\"getTotalStaked()\":{\"notice\":\"Return the total staked DAI tokens \"},\"withdraw(uint256)\":{\"notice\":\"Allow user to unstake an amount of DAI from their account if balance is sufficient. There is a timelock on deposit of 2 days.\"}},\"notice\":\"This contract is used to stake ETH through the Family-Staking app\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DAIStake.sol\":\"DAIStake\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/DAI.sol\":{\"keccak256\":\"0x82aa52aa049ad41e46fcfd08eb4ad2b1f1088c8cbc964ad9bf5abc509340570e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77981054b721c738496540472d0d2c3480fb9ea5e6b6b441183fd219f2b05db4\",\"dweb:/ipfs/QmcruKtZThW43yp7NGpAhENcpkswUB23AGz74wrwF2veWv\"]},\"project:/contracts/DAIStake.sol\":{\"keccak256\":\"0x41eaed07f643ed2697c81670fb96deb6314e1d8258f8e1dce5d43e04e06a14ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b5a28fbe6c9787a261221be6941dd7d85ba9a655be03d6186bfda64ce9dc74f\",\"dweb:/ipfs/QmQEQxY9JS3yTuJ4o8aWSRSeW9r4QKXV9ZPtTRumMpjjx7\"]},\"project:/contracts/FAM.sol\":{\"keccak256\":\"0x24fcafaf84ae0505b0a812b486b52a094bd4d770bf07fc6310b92bd256fcd8b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92b47d4cb15aa128ea624873b777583bf2138cce4af1e6e2d388af399f07d7c3\",\"dweb:/ipfs/QmfXp4YA4LXYX635d6P2ziNzWgFyy828iB1uUqM8RYNy1b\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x6080604052662386f26fc100006004553480156200001c57600080fd5b50604051620013fd380380620013fd833981810160405281019062000042919062000135565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200017c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000fd82620000d0565b9050919050565b6200010f81620000f0565b81146200011b57600080fd5b50565b6000815190506200012f8162000104565b92915050565b600080604083850312156200014f576200014e620000cb565b5b60006200015f858286016200011e565b925050602062000172858286016200011e565b9150509250929050565b611271806200018c6000396000f3fe60806040526004361061004a5760003560e01c80630917e7761461004f5780632e1a7d4d1461007a5780633a02a42d146100a3578063b6b55f25146100e0578063f6ed2017146100fc575b600080fd5b34801561005b57600080fd5b50610064610139565b6040516100719190610bd4565b60405180910390f35b34801561008657600080fd5b506100a1600480360381019061009c9190610c20565b6101db565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610cab565b610675565b6040516100d79190610bd4565b60405180910390f35b6100fa60048036038101906100f59190610c20565b6106c1565b005b34801561010857600080fd5b50610123600480360381019061011e9190610cab565b6106cd565b6040516101309190610bd4565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101959190610ce7565b602060405180830381865afa1580156101b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d69190610d17565b905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060008103610265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c90610da1565b60405180910390fd5b818110156102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029f90610e33565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103029190610ce7565b602060405180830381865afa15801561031f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103439190610d17565b1015610384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037b90610e9f565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905060006202a300826103dc9190610eee565b905080421015610421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041890610f90565b60405180910390fd5b838361042d9190610fb0565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555061047e838333610716565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637b56c2b233836040518363ffffffff1660e01b8152600401610564929190610fe4565b600060405180830381600087803b15801561057e57600080fd5b505af1158015610592573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff1660e01b81526004016105f1929190610fe4565b6020604051808303816000875af1158015610610573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106349190611045565b507f59945647ef1c847843ee61b123cb5a2b68b6f77f1466683a5c6b7ecd4a8a1cc83386604051610666929190610fe4565b60405180910390a15050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b6106ca81610855565b50565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006018603c8085426107299190610fb0565b61073391906110a1565b61073d91906110a1565b61074791906110a1565b905060006768155a43676e000090506000685150ae84a8cdf000009050600082670de0b6b3a7640000612710670de0b6b3a76400008a8661078891906110d2565b61079291906110a1565b61079c91906110a1565b866107a791906110d2565b6107b191906110d2565b6107bb91906110a1565b905080600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461080c9190610eee565b925050819055507ff28ead80696c20d8f2c4b30fe0abc00926c4923c4390de2cdabb35f61074fd6d8582604051610844929190610fe4565b60405180910390a150505050505050565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036108c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bb90611178565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161091e9190610ce7565b602060405180830381865afa15801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095f9190610d17565b10156109a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610997906111e4565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016109fd93929190611204565b6020604051808303816000875af1158015610a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a409190611045565b506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490508282610adb9190610eee565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555042600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000821115610b7d57610b7c828233610716565b5b7fe865f22f57d0ae46c9f05f6677e4138264cb541aeb2c4bc8c82e7a9b3dd4905a3384604051610bae929190610fe4565b60405180910390a1505050565b6000819050919050565b610bce81610bbb565b82525050565b6000602082019050610be96000830184610bc5565b92915050565b600080fd5b610bfd81610bbb565b8114610c0857600080fd5b50565b600081359050610c1a81610bf4565b92915050565b600060208284031215610c3657610c35610bef565b5b6000610c4484828501610c0b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c7882610c4d565b9050919050565b610c8881610c6d565b8114610c9357600080fd5b50565b600081359050610ca581610c7f565b92915050565b600060208284031215610cc157610cc0610bef565b5b6000610ccf84828501610c96565b91505092915050565b610ce181610c6d565b82525050565b6000602082019050610cfc6000830184610cd8565b92915050565b600081519050610d1181610bf4565b92915050565b600060208284031215610d2d57610d2c610bef565b5b6000610d3b84828501610d02565b91505092915050565b600082825260208201905092915050565b7f4163636f756e7420697320656d70747900000000000000000000000000000000600082015250565b6000610d8b601083610d44565b9150610d9682610d55565b602082019050919050565b60006020820190508181036000830152610dba81610d7e565b9050919050565b7f43616e6e6f74207769746864726177206d6f7265207468616e20796f7572206360008201527f757272656e742062616c616e6365000000000000000000000000000000000000602082015250565b6000610e1d602e83610d44565b9150610e2882610dc1565b604082019050919050565b60006020820190508181036000830152610e4c81610e10565b9050919050565b7f4e6f7420656e6f756768206c6971756964697479000000000000000000000000600082015250565b6000610e89601483610d44565b9150610e9482610e53565b602082019050919050565b60006020820190508181036000830152610eb881610e7c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ef982610bbb565b9150610f0483610bbb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f3957610f38610ebf565b5b828201905092915050565b7f4465706f7369742069732074696d65206c6f636b656400000000000000000000600082015250565b6000610f7a601683610d44565b9150610f8582610f44565b602082019050919050565b60006020820190508181036000830152610fa981610f6d565b9050919050565b6000610fbb82610bbb565b9150610fc683610bbb565b925082821015610fd957610fd8610ebf565b5b828203905092915050565b6000604082019050610ff96000830185610cd8565b6110066020830184610bc5565b9392505050565b60008115159050919050565b6110228161100d565b811461102d57600080fd5b50565b60008151905061103f81611019565b92915050565b60006020828403121561105b5761105a610bef565b5b600061106984828501611030565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110ac82610bbb565b91506110b783610bbb565b9250826110c7576110c6611072565b5b828204905092915050565b60006110dd82610bbb565b91506110e883610bbb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561112157611120610ebf565b5b828202905092915050565b7f416464726573732063616e206e6f74206265206e756c6c000000000000000000600082015250565b6000611162601783610d44565b915061116d8261112c565b602082019050919050565b6000602082019050818103600083015261119181611155565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006111ce601483610d44565b91506111d982611198565b602082019050919050565b600060208201905081810360008301526111fd816111c1565b9050919050565b60006060820190506112196000830186610cd8565b6112266020830185610cd8565b6112336040830184610bc5565b94935050505056fea26469706673582212206cf51a8c4361b22ca91ea6382dd21d941b570089bce39fd99013c32cdce4207664736f6c634300080f0033",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c80630917e7761461004f5780632e1a7d4d1461007a5780633a02a42d146100a3578063b6b55f25146100e0578063f6ed2017146100fc575b600080fd5b34801561005b57600080fd5b50610064610139565b6040516100719190610bd4565b60405180910390f35b34801561008657600080fd5b506100a1600480360381019061009c9190610c20565b6101db565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610cab565b610675565b6040516100d79190610bd4565b60405180910390f35b6100fa60048036038101906100f59190610c20565b6106c1565b005b34801561010857600080fd5b50610123600480360381019061011e9190610cab565b6106cd565b6040516101309190610bd4565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101959190610ce7565b602060405180830381865afa1580156101b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d69190610d17565b905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060008103610265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c90610da1565b60405180910390fd5b818110156102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029f90610e33565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103029190610ce7565b602060405180830381865afa15801561031f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103439190610d17565b1015610384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037b90610e9f565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905060006202a300826103dc9190610eee565b905080421015610421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041890610f90565b60405180910390fd5b838361042d9190610fb0565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555061047e838333610716565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637b56c2b233836040518363ffffffff1660e01b8152600401610564929190610fe4565b600060405180830381600087803b15801561057e57600080fd5b505af1158015610592573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff1660e01b81526004016105f1929190610fe4565b6020604051808303816000875af1158015610610573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106349190611045565b507f59945647ef1c847843ee61b123cb5a2b68b6f77f1466683a5c6b7ecd4a8a1cc83386604051610666929190610fe4565b60405180910390a15050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b6106ca81610855565b50565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006018603c8085426107299190610fb0565b61073391906110a1565b61073d91906110a1565b61074791906110a1565b905060006768155a43676e000090506000685150ae84a8cdf000009050600082670de0b6b3a7640000612710670de0b6b3a76400008a8661078891906110d2565b61079291906110a1565b61079c91906110a1565b866107a791906110d2565b6107b191906110d2565b6107bb91906110a1565b905080600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461080c9190610eee565b925050819055507ff28ead80696c20d8f2c4b30fe0abc00926c4923c4390de2cdabb35f61074fd6d8582604051610844929190610fe4565b60405180910390a150505050505050565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036108c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bb90611178565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161091e9190610ce7565b602060405180830381865afa15801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095f9190610d17565b10156109a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610997906111e4565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016109fd93929190611204565b6020604051808303816000875af1158015610a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a409190611045565b506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490508282610adb9190610eee565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555042600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000821115610b7d57610b7c828233610716565b5b7fe865f22f57d0ae46c9f05f6677e4138264cb541aeb2c4bc8c82e7a9b3dd4905a3384604051610bae929190610fe4565b60405180910390a1505050565b6000819050919050565b610bce81610bbb565b82525050565b6000602082019050610be96000830184610bc5565b92915050565b600080fd5b610bfd81610bbb565b8114610c0857600080fd5b50565b600081359050610c1a81610bf4565b92915050565b600060208284031215610c3657610c35610bef565b5b6000610c4484828501610c0b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c7882610c4d565b9050919050565b610c8881610c6d565b8114610c9357600080fd5b50565b600081359050610ca581610c7f565b92915050565b600060208284031215610cc157610cc0610bef565b5b6000610ccf84828501610c96565b91505092915050565b610ce181610c6d565b82525050565b6000602082019050610cfc6000830184610cd8565b92915050565b600081519050610d1181610bf4565b92915050565b600060208284031215610d2d57610d2c610bef565b5b6000610d3b84828501610d02565b91505092915050565b600082825260208201905092915050565b7f4163636f756e7420697320656d70747900000000000000000000000000000000600082015250565b6000610d8b601083610d44565b9150610d9682610d55565b602082019050919050565b60006020820190508181036000830152610dba81610d7e565b9050919050565b7f43616e6e6f74207769746864726177206d6f7265207468616e20796f7572206360008201527f757272656e742062616c616e6365000000000000000000000000000000000000602082015250565b6000610e1d602e83610d44565b9150610e2882610dc1565b604082019050919050565b60006020820190508181036000830152610e4c81610e10565b9050919050565b7f4e6f7420656e6f756768206c6971756964697479000000000000000000000000600082015250565b6000610e89601483610d44565b9150610e9482610e53565b602082019050919050565b60006020820190508181036000830152610eb881610e7c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ef982610bbb565b9150610f0483610bbb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f3957610f38610ebf565b5b828201905092915050565b7f4465706f7369742069732074696d65206c6f636b656400000000000000000000600082015250565b6000610f7a601683610d44565b9150610f8582610f44565b602082019050919050565b60006020820190508181036000830152610fa981610f6d565b9050919050565b6000610fbb82610bbb565b9150610fc683610bbb565b925082821015610fd957610fd8610ebf565b5b828203905092915050565b6000604082019050610ff96000830185610cd8565b6110066020830184610bc5565b9392505050565b60008115159050919050565b6110228161100d565b811461102d57600080fd5b50565b60008151905061103f81611019565b92915050565b60006020828403121561105b5761105a610bef565b5b600061106984828501611030565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110ac82610bbb565b91506110b783610bbb565b9250826110c7576110c6611072565b5b828204905092915050565b60006110dd82610bbb565b91506110e883610bbb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561112157611120610ebf565b5b828202905092915050565b7f416464726573732063616e206e6f74206265206e756c6c000000000000000000600082015250565b6000611162601783610d44565b915061116d8261112c565b602082019050919050565b6000602082019050818103600083015261119181611155565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006111ce601483610d44565b91506111d982611198565b602082019050919050565b600060208201905081810360008301526111fd816111c1565b9050919050565b60006060820190506112196000830186610cd8565b6112266020830185610cd8565b6112336040830184610bc5565b94935050505056fea26469706673582212206cf51a8c4361b22ca91ea6382dd21d941b570089bce39fd99013c32cdce4207664736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1355:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:11",
                "type": ""
              }
            ],
            "src": "7:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:11"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:11"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:11",
                "type": ""
              }
            ],
            "src": "334:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:11",
                "type": ""
              }
            ],
            "src": "466:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:11",
                "type": ""
              }
            ],
            "src": "568:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:11",
                "type": ""
              }
            ],
            "src": "696:143:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "939:413:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "985:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "987:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "987:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "987:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "960:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "969:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "956:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "956:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "981:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "952:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "952:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "949:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1078:128:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1093:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1107:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1097:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1122:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1168:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1179:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1164:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1164:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1188:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1132:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1132:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1122:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1216:129:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1231:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1245:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1235:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1261:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1307:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1318:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1303:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1303:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1327:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1271:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1271:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1261:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "901:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "912:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "924:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "932:6:11",
                "type": ""
              }
            ],
            "src": "845:507:11"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:12074:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:11",
                "type": ""
              }
            ],
            "src": "7:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:11"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:11",
                "type": ""
              }
            ],
            "src": "90:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "312:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "322:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "345:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "284:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "307:4:11",
                "type": ""
              }
            ],
            "src": "214:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "482:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "492:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "502:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "492:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "475:6:11",
                "type": ""
              }
            ],
            "src": "442:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "612:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "629:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "632:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "622:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "622:12:11"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "523:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "752:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "755:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "745:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "745:12:11"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "646:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "812:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "869:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "878:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "881:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "871:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "871:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "871:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "835:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "860:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "842:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "842:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "832:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "832:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "822:63:11"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "805:5:11",
                "type": ""
              }
            ],
            "src": "769:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "949:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "959:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "981:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "968:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "959:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1024:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "997:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "997:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "997:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "927:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "935:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "943:5:11",
                "type": ""
              }
            ],
            "src": "897:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1108:263:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1154:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1156:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1156:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1156:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1129:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1138:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1125:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1125:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1150:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1121:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1121:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1118:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1247:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1262:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1266:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1291:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1326:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1337:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1322:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1322:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1346:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1301:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1301:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1291:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1078:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1089:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1101:6:11",
                "type": ""
              }
            ],
            "src": "1042:329:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1422:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1432:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1447:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1454:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1443:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1443:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1432:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1404:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1414:7:11",
                "type": ""
              }
            ],
            "src": "1377:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1554:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1564:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1593:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1575:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1575:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1564:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1536:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1546:7:11",
                "type": ""
              }
            ],
            "src": "1509:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1654:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1711:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1720:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1723:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1713:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1713:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1713:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1677:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1702:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1684:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1684:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1674:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1674:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1667:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1667:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1664:63:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1647:5:11",
                "type": ""
              }
            ],
            "src": "1611:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1791:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1801:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1823:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1810:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1810:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1801:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1866:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1839:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1839:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1839:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1769:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1777:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1785:5:11",
                "type": ""
              }
            ],
            "src": "1739:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1950:263:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1996:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1998:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1998:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1998:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1971:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1980:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1967:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1967:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1992:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1963:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1963:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1960:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2089:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2104:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2118:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2108:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2133:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2168:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2179:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2164:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2164:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2188:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2143:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2143:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2133:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1920:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1931:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1943:6:11",
                "type": ""
              }
            ],
            "src": "1884:329:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2284:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2301:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2324:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2306:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2306:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2294:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2294:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2294:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2272:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2279:3:11",
                "type": ""
              }
            ],
            "src": "2219:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2441:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2451:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2463:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2474:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2459:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2459:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2451:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2531:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2544:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2555:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2540:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2540:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2487:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2487:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2487:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2413:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2425:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2436:4:11",
                "type": ""
              }
            ],
            "src": "2343:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2634:80:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2644:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2659:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2653:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2653:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2644:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2702:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2675:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2675:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2675:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2612:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2620:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2628:5:11",
                "type": ""
              }
            ],
            "src": "2571:143:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2797:274:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2843:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2845:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2845:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2845:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2818:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2827:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2814:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2814:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2839:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2810:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2810:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2807:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2936:128:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2951:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2965:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2955:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2980:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3026:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3037:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3022:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3022:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3046:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2990:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2990:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2980:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2767:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2778:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2790:6:11",
                "type": ""
              }
            ],
            "src": "2720:351:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3173:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3190:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3195:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3183:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3183:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3183:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3211:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3230:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3235:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3226:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3226:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3211:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3145:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3150:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3161:11:11",
                "type": ""
              }
            ],
            "src": "3077:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3358:60:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3380:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3388:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3376:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3376:14:11"
                      },
                      {
                        "hexValue": "4163636f756e7420697320656d707479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3392:18:11",
                        "type": "",
                        "value": "Account is empty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3369:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3369:42:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3369:42:11"
                }
              ]
            },
            "name": "store_literal_in_memory_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3350:6:11",
                "type": ""
              }
            ],
            "src": "3252:166:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3570:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3580:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3646:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3651:2:11",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3587:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3587:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3580:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3752:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66",
                      "nodeType": "YulIdentifier",
                      "src": "3663:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3663:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3663:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3765:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3776:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3781:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3772:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3772:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3765:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3558:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3566:3:11",
                "type": ""
              }
            ],
            "src": "3424:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3967:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3977:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3989:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4000:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3985:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3985:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3977:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4024:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4035:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4020:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4020:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4043:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4049:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4039:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4039:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4013:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4013:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4013:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4069:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4203:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4077:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4077:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4069:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3947:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3962:4:11",
                "type": ""
              }
            ],
            "src": "3796:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4327:127:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4349:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4357:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4345:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4345:14:11"
                      },
                      {
                        "hexValue": "43616e6e6f74207769746864726177206d6f7265207468616e20796f75722063",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4361:34:11",
                        "type": "",
                        "value": "Cannot withdraw more than your c"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4338:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4338:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4338:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4417:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4425:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4413:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4413:15:11"
                      },
                      {
                        "hexValue": "757272656e742062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4430:16:11",
                        "type": "",
                        "value": "urrent balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4406:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4406:41:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4406:41:11"
                }
              ]
            },
            "name": "store_literal_in_memory_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4319:6:11",
                "type": ""
              }
            ],
            "src": "4221:233:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4606:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4616:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4682:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4687:2:11",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4623:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4623:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4616:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4788:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9",
                      "nodeType": "YulIdentifier",
                      "src": "4699:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4699:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4699:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4801:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4812:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4817:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4808:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4808:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4801:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4594:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4602:3:11",
                "type": ""
              }
            ],
            "src": "4460:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5003:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5013:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5025:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5036:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5021:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5021:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5013:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5060:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5071:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5056:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5056:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5079:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5085:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5075:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5075:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5049:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5049:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5049:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5105:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5239:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5113:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5113:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5105:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4983:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4998:4:11",
                "type": ""
              }
            ],
            "src": "4832:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5363:64:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5385:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5393:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5381:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5381:14:11"
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768206c6971756964697479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5397:22:11",
                        "type": "",
                        "value": "Not enough liquidity"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5374:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5374:46:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5374:46:11"
                }
              ]
            },
            "name": "store_literal_in_memory_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5355:6:11",
                "type": ""
              }
            ],
            "src": "5257:170:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5579:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5589:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5655:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5660:2:11",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5596:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5596:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5589:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5761:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
                      "nodeType": "YulIdentifier",
                      "src": "5672:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5672:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5672:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5774:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5785:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5790:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5781:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5781:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5774:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5567:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5575:3:11",
                "type": ""
              }
            ],
            "src": "5433:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5976:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5986:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5998:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6009:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5994:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5994:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5986:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6033:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6044:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6029:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6029:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6052:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6058:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6048:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6048:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6022:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6022:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6022:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6078:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6212:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6086:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6086:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6078:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5956:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5971:4:11",
                "type": ""
              }
            ],
            "src": "5805:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6258:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6275:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6278:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6268:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6268:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6268:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6372:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6375:4:11",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6365:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6365:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6365:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6396:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6399:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6389:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6389:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6389:15:11"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6230:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6460:261:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6470:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6493:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6475:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6475:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6470:1:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6504:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6527:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6509:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6509:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6504:1:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6667:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6669:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6669:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6669:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6588:1:11"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6595:66:11",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6663:1:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6591:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6591:74:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6585:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6585:81:11"
                  },
                  "nodeType": "YulIf",
                  "src": "6582:107:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6699:16:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6710:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6713:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6706:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6706:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6699:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6447:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6450:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6456:3:11",
                "type": ""
              }
            ],
            "src": "6416:305:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6833:66:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6855:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6863:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6851:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6851:14:11"
                      },
                      {
                        "hexValue": "4465706f7369742069732074696d65206c6f636b6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6867:24:11",
                        "type": "",
                        "value": "Deposit is time locked"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6844:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6844:48:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6844:48:11"
                }
              ]
            },
            "name": "store_literal_in_memory_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6825:6:11",
                "type": ""
              }
            ],
            "src": "6727:172:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7051:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7061:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7127:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7132:2:11",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7068:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7068:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7061:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7233:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce",
                      "nodeType": "YulIdentifier",
                      "src": "7144:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7144:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7144:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7246:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7257:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7262:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7253:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7253:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7246:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7039:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7047:3:11",
                "type": ""
              }
            ],
            "src": "6905:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7448:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7458:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7470:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7481:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7466:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7466:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7458:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7505:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7516:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7501:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7501:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7524:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7530:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7520:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7520:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7494:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7494:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7494:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7550:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7684:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7558:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7558:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7550:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7428:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7443:4:11",
                "type": ""
              }
            ],
            "src": "7277:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7747:146:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7757:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7780:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7762:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7762:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7757:1:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7791:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7814:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7796:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7796:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7791:1:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7838:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7840:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7840:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7840:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7832:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7835:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7829:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7829:8:11"
                  },
                  "nodeType": "YulIf",
                  "src": "7826:34:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7870:17:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7882:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7885:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7878:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7878:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7870:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7733:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7736:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7742:4:11",
                "type": ""
              }
            ],
            "src": "7702:191:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8025:206:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8035:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8047:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8058:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8043:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8043:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8035:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8115:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8128:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8139:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8124:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8124:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8071:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8071:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8071:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8196:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8209:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8220:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8205:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8205:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8152:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8152:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8152:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7989:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8001:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8009:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8020:4:11",
                "type": ""
              }
            ],
            "src": "7899:332:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8279:48:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8289:32:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8314:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8307:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8307:13:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8300:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8300:21:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8289:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8261:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8271:7:11",
                "type": ""
              }
            ],
            "src": "8237:90:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8373:76:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8427:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8436:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8439:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8429:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8429:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8429:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8396:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8418:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "8403:14:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8403:21:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8393:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8393:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8386:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8386:40:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8383:60:11"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8366:5:11",
                "type": ""
              }
            ],
            "src": "8333:116:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8515:77:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8525:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8540:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8534:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8534:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8525:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8580:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "8556:23:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8556:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8556:30:11"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8493:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8501:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8509:5:11",
                "type": ""
              }
            ],
            "src": "8455:137:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8672:271:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8718:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "8720:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8720:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8720:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8693:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8702:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8689:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8689:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8714:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8685:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8685:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8682:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8811:125:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8826:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8840:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8830:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8855:71:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8898:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8909:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8894:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8894:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8918:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "8865:28:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8865:61:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8855:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8642:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8653:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8665:6:11",
                "type": ""
              }
            ],
            "src": "8598:345:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8977:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8994:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8997:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8987:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8987:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8987:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9091:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9094:4:11",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9084:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9084:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9084:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9115:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9118:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9108:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9108:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9108:15:11"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "8949:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9177:143:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9187:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9210:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9192:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9192:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "9187:1:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9221:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9244:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9226:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9226:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "9221:1:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9268:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "9270:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9270:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9270:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9265:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9258:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9258:9:11"
                  },
                  "nodeType": "YulIf",
                  "src": "9255:35:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9300:14:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9309:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9312:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "9305:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9305:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "9300:1:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9166:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9169:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "9175:1:11",
                "type": ""
              }
            ],
            "src": "9135:185:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9374:300:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9384:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9407:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9389:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9389:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "9384:1:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9418:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9441:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9423:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9423:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "9418:1:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9616:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9618:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9618:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9618:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "9528:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "9521:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9521:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9514:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9514:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9536:1:11"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9543:66:11",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "9611:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "9539:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9539:74:11"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9533:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9533:81:11"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9510:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9510:105:11"
                  },
                  "nodeType": "YulIf",
                  "src": "9507:131:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9648:20:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9663:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9666:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "9659:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9659:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "9648:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9357:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9360:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "9366:7:11",
                "type": ""
              }
            ],
            "src": "9326:348:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9786:67:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9808:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9816:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9804:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9804:14:11"
                      },
                      {
                        "hexValue": "416464726573732063616e206e6f74206265206e756c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9820:25:11",
                        "type": "",
                        "value": "Address can not be null"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9797:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9797:49:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9797:49:11"
                }
              ]
            },
            "name": "store_literal_in_memory_4075f3e92a1e198d5a70237afb01d315d7b7b3bcaab1f133d4862dd823a9dede",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9778:6:11",
                "type": ""
              }
            ],
            "src": "9680:173:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10005:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10015:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10081:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10086:2:11",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10022:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10022:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10015:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10187:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4075f3e92a1e198d5a70237afb01d315d7b7b3bcaab1f133d4862dd823a9dede",
                      "nodeType": "YulIdentifier",
                      "src": "10098:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10098:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10098:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10200:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10211:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10216:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10207:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10207:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10200:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4075f3e92a1e198d5a70237afb01d315d7b7b3bcaab1f133d4862dd823a9dede_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9993:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10001:3:11",
                "type": ""
              }
            ],
            "src": "9859:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10402:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10412:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10424:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10435:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10420:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10420:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10412:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10459:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10470:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10455:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10455:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10478:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10484:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10474:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10474:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10448:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10448:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10448:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10504:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10638:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4075f3e92a1e198d5a70237afb01d315d7b7b3bcaab1f133d4862dd823a9dede_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10512:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10512:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10504:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4075f3e92a1e198d5a70237afb01d315d7b7b3bcaab1f133d4862dd823a9dede__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10382:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10397:4:11",
                "type": ""
              }
            ],
            "src": "10231:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10762:64:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10784:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10792:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10780:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10780:14:11"
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10796:22:11",
                        "type": "",
                        "value": "Insufficient balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10773:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10773:46:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10773:46:11"
                }
              ]
            },
            "name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10754:6:11",
                "type": ""
              }
            ],
            "src": "10656:170:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10978:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10988:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11054:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11059:2:11",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10995:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10995:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10988:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11160:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                      "nodeType": "YulIdentifier",
                      "src": "11071:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11071:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11071:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11173:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11184:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11189:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11180:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11180:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11173:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10966:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10974:3:11",
                "type": ""
              }
            ],
            "src": "10832:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11375:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11385:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11397:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11408:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11393:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11393:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11385:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11432:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11443:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11428:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11428:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11451:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11457:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11447:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11447:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11421:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11421:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11421:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11477:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11611:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11485:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11485:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11477:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11355:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11370:4:11",
                "type": ""
              }
            ],
            "src": "11204:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11783:288:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11793:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11805:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11816:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11801:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11801:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11793:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11873:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11886:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11897:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11882:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11882:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11829:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11829:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11829:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11954:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11967:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11978:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11963:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11963:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11910:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11910:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11910:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12036:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12049:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12060:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12045:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12045:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11992:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11992:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11992:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11739:9:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11751:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11759:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11767:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11778:4:11",
                "type": ""
              }
            ],
            "src": "11629:442:11"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66(memPtr) {\n\n        mstore(add(memPtr, 0), \"Account is empty\")\n\n    }\n\n    function abi_encode_t_stringliteral_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot withdraw more than your c\")\n\n        mstore(add(memPtr, 32), \"urrent balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough liquidity\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit is time locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function store_literal_in_memory_4075f3e92a1e198d5a70237afb01d315d7b7b3bcaab1f133d4862dd823a9dede(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address can not be null\")\n\n    }\n\n    function abi_encode_t_stringliteral_4075f3e92a1e198d5a70237afb01d315d7b7b3bcaab1f133d4862dd823a9dede_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_4075f3e92a1e198d5a70237afb01d315d7b7b3bcaab1f133d4862dd823a9dede(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4075f3e92a1e198d5a70237afb01d315d7b7b3bcaab1f133d4862dd823a9dede__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4075f3e92a1e198d5a70237afb01d315d7b7b3bcaab1f133d4862dd823a9dede_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "358:5633:1:-:0;;;545:17;527:35;;1107:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1170:4;1157:3;;:18;;;;;;;;;;;;;;;;;;1203:4;1185:11;;:23;;;;;;;;;;;;;;;;;;1107:108;;358:5633;;88:117:11;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;358:5633:1:-;;;;;;;",
  "deployedSourceMap": "358:5633:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1655:106;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4688:1301;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1351:127;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4281:92;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1882:128;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1655:106;1703:4;1726:3;;;;;;;;;;;:13;;;1748:4;1726:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1719:35;;1655:106;:::o;4688:1301::-;4784:14;4801:6;:18;4808:10;4801:18;;;;;;;;;;;;;;;:25;;;4784:42;;4857:1;4844:9;:14;4836:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;4910:7;4897:9;:20;;4889:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5018:7;4986:3;;;;;;;;;;:13;;;5008:4;4986:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;4978:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;5142:18;5163:6;:18;5170:10;5163:18;;;;;;;;;;;;;;;:30;;;5142:51;;5203:13;5235:6;5219:13;:22;;;;:::i;:::-;5203:38;;5278:8;5259:15;:27;;5251:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;5401:7;5389:9;:19;;;;:::i;:::-;5361:6;:18;5368:10;5361:18;;;;;;;;;;;;;;;:25;;:47;;;;5482:58;5503:9;5514:13;5529:10;5482:20;:58::i;:::-;5550:18;5571:14;:26;5586:10;5571:26;;;;;;;;;;;;;;;;5550:47;;5636:1;5607:14;:26;5622:10;5607:26;;;;;;;;;;;;;;;:30;;;;5745:11;;;;;;;;;;;:18;;;5764:10;5776:13;5745:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5852:3;;;;;;;;;;:12;;;5865:10;5877:7;5852:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5943:39;5962:10;5974:7;5943:39;;;;;;;:::i;:::-;;;;;;;;4729:1260;;;;4688:1301;:::o;1351:127::-;1421:4;1444:6;:20;1451:12;1444:20;;;;;;;;;;;;;;;:27;;;1437:34;;1351:127;;;:::o;4281:92::-;4342:24;4358:7;4342:15;:24::i;:::-;4281:92;:::o;1882:128::-;1953:4;1975:14;:28;1990:12;1975:28;;;;;;;;;;;;;;;;1968:35;;1882:128;;;:::o;3396:687::-;3535:10;3586:2;3581;3576;3567:5;3549:15;:23;;;;:::i;:::-;3548:30;;;;:::i;:::-;:35;;;;:::i;:::-;:40;;;;:::i;:::-;3535:53;;3598:13;3614:19;3598:35;;3663:13;3679:22;3663:38;;3799:14;3919:8;3895:19;3883:5;3859:19;3847:7;3836:8;:18;;;;:::i;:::-;3834:44;;;;:::i;:::-;3832:56;;;;:::i;:::-;3822:5;:68;;;;:::i;:::-;3820:94;;;;:::i;:::-;3818:109;;;;:::i;:::-;3799:130;;4012:9;3980:14;:28;3995:12;3980:28;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;4037:39;4052:12;4066:9;4037:39;;;;;;;:::i;:::-;;;;;;;;3482:601;;;;3396:687;;;:::o;2261:838::-;2352:1;2330:24;;:10;:24;;;2322:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2429:7;2400:3;;;;;;;;;;:13;;;2414:10;2400:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;2392:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2516:3;;;;;;;;;;:16;;;2533:10;2553:4;2560:7;2516:52;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2579:17;2599:6;:18;2606:10;2599:18;;;;;;;;;;;;;;;:25;;;2579:45;;2634:23;2660:6;:18;2667:10;2660:18;;;;;;;;;;;;;;;:30;;;2634:56;;2778:7;2763:12;:22;;;;:::i;:::-;2735:6;:18;2742:10;2735:18;;;;;;;;;;;;;;;:25;;:50;;;;2828:15;2795:6;:18;2802:10;2795:18;;;;;;;;;;;;;;;:30;;:48;;;;2942:1;2927:12;:16;2924:112;;;2959:66;2980:12;2994:18;3014:10;2959:20;:66::i;:::-;2924:112;3054:38;3072:10;3084:7;3054:38;;;;;;;:::i;:::-;;;;;;;;2312:787;;2261:838;:::o;7:77:11:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:118::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2219:118;;:::o;2343:222::-;2436:4;2474:2;2463:9;2459:18;2451:26;;2487:71;2555:1;2544:9;2540:17;2531:6;2487:71;:::i;:::-;2343:222;;;;:::o;2571:143::-;2628:5;2659:6;2653:13;2644:22;;2675:33;2702:5;2675:33;:::i;:::-;2571:143;;;;:::o;2720:351::-;2790:6;2839:2;2827:9;2818:7;2814:23;2810:32;2807:119;;;2845:79;;:::i;:::-;2807:119;2965:1;2990:64;3046:7;3037:6;3026:9;3022:22;2990:64;:::i;:::-;2980:74;;2936:128;2720:351;;;;:::o;3077:169::-;3161:11;3195:6;3190:3;3183:19;3235:4;3230:3;3226:14;3211:29;;3077:169;;;;:::o;3252:166::-;3392:18;3388:1;3380:6;3376:14;3369:42;3252:166;:::o;3424:366::-;3566:3;3587:67;3651:2;3646:3;3587:67;:::i;:::-;3580:74;;3663:93;3752:3;3663:93;:::i;:::-;3781:2;3776:3;3772:12;3765:19;;3424:366;;;:::o;3796:419::-;3962:4;4000:2;3989:9;3985:18;3977:26;;4049:9;4043:4;4039:20;4035:1;4024:9;4020:17;4013:47;4077:131;4203:4;4077:131;:::i;:::-;4069:139;;3796:419;;;:::o;4221:233::-;4361:34;4357:1;4349:6;4345:14;4338:58;4430:16;4425:2;4417:6;4413:15;4406:41;4221:233;:::o;4460:366::-;4602:3;4623:67;4687:2;4682:3;4623:67;:::i;:::-;4616:74;;4699:93;4788:3;4699:93;:::i;:::-;4817:2;4812:3;4808:12;4801:19;;4460:366;;;:::o;4832:419::-;4998:4;5036:2;5025:9;5021:18;5013:26;;5085:9;5079:4;5075:20;5071:1;5060:9;5056:17;5049:47;5113:131;5239:4;5113:131;:::i;:::-;5105:139;;4832:419;;;:::o;5257:170::-;5397:22;5393:1;5385:6;5381:14;5374:46;5257:170;:::o;5433:366::-;5575:3;5596:67;5660:2;5655:3;5596:67;:::i;:::-;5589:74;;5672:93;5761:3;5672:93;:::i;:::-;5790:2;5785:3;5781:12;5774:19;;5433:366;;;:::o;5805:419::-;5971:4;6009:2;5998:9;5994:18;5986:26;;6058:9;6052:4;6048:20;6044:1;6033:9;6029:17;6022:47;6086:131;6212:4;6086:131;:::i;:::-;6078:139;;5805:419;;;:::o;6230:180::-;6278:77;6275:1;6268:88;6375:4;6372:1;6365:15;6399:4;6396:1;6389:15;6416:305;6456:3;6475:20;6493:1;6475:20;:::i;:::-;6470:25;;6509:20;6527:1;6509:20;:::i;:::-;6504:25;;6663:1;6595:66;6591:74;6588:1;6585:81;6582:107;;;6669:18;;:::i;:::-;6582:107;6713:1;6710;6706:9;6699:16;;6416:305;;;;:::o;6727:172::-;6867:24;6863:1;6855:6;6851:14;6844:48;6727:172;:::o;6905:366::-;7047:3;7068:67;7132:2;7127:3;7068:67;:::i;:::-;7061:74;;7144:93;7233:3;7144:93;:::i;:::-;7262:2;7257:3;7253:12;7246:19;;6905:366;;;:::o;7277:419::-;7443:4;7481:2;7470:9;7466:18;7458:26;;7530:9;7524:4;7520:20;7516:1;7505:9;7501:17;7494:47;7558:131;7684:4;7558:131;:::i;:::-;7550:139;;7277:419;;;:::o;7702:191::-;7742:4;7762:20;7780:1;7762:20;:::i;:::-;7757:25;;7796:20;7814:1;7796:20;:::i;:::-;7791:25;;7835:1;7832;7829:8;7826:34;;;7840:18;;:::i;:::-;7826:34;7885:1;7882;7878:9;7870:17;;7702:191;;;;:::o;7899:332::-;8020:4;8058:2;8047:9;8043:18;8035:26;;8071:71;8139:1;8128:9;8124:17;8115:6;8071:71;:::i;:::-;8152:72;8220:2;8209:9;8205:18;8196:6;8152:72;:::i;:::-;7899:332;;;;;:::o;8237:90::-;8271:7;8314:5;8307:13;8300:21;8289:32;;8237:90;;;:::o;8333:116::-;8403:21;8418:5;8403:21;:::i;:::-;8396:5;8393:32;8383:60;;8439:1;8436;8429:12;8383:60;8333:116;:::o;8455:137::-;8509:5;8540:6;8534:13;8525:22;;8556:30;8580:5;8556:30;:::i;:::-;8455:137;;;;:::o;8598:345::-;8665:6;8714:2;8702:9;8693:7;8689:23;8685:32;8682:119;;;8720:79;;:::i;:::-;8682:119;8840:1;8865:61;8918:7;8909:6;8898:9;8894:22;8865:61;:::i;:::-;8855:71;;8811:125;8598:345;;;;:::o;8949:180::-;8997:77;8994:1;8987:88;9094:4;9091:1;9084:15;9118:4;9115:1;9108:15;9135:185;9175:1;9192:20;9210:1;9192:20;:::i;:::-;9187:25;;9226:20;9244:1;9226:20;:::i;:::-;9221:25;;9265:1;9255:35;;9270:18;;:::i;:::-;9255:35;9312:1;9309;9305:9;9300:14;;9135:185;;;;:::o;9326:348::-;9366:7;9389:20;9407:1;9389:20;:::i;:::-;9384:25;;9423:20;9441:1;9423:20;:::i;:::-;9418:25;;9611:1;9543:66;9539:74;9536:1;9533:81;9528:1;9521:9;9514:17;9510:105;9507:131;;;9618:18;;:::i;:::-;9507:131;9666:1;9663;9659:9;9648:20;;9326:348;;;;:::o;9680:173::-;9820:25;9816:1;9808:6;9804:14;9797:49;9680:173;:::o;9859:366::-;10001:3;10022:67;10086:2;10081:3;10022:67;:::i;:::-;10015:74;;10098:93;10187:3;10098:93;:::i;:::-;10216:2;10211:3;10207:12;10200:19;;9859:366;;;:::o;10231:419::-;10397:4;10435:2;10424:9;10420:18;10412:26;;10484:9;10478:4;10474:20;10470:1;10459:9;10455:17;10448:47;10512:131;10638:4;10512:131;:::i;:::-;10504:139;;10231:419;;;:::o;10656:170::-;10796:22;10792:1;10784:6;10780:14;10773:46;10656:170;:::o;10832:366::-;10974:3;10995:67;11059:2;11054:3;10995:67;:::i;:::-;10988:74;;11071:93;11160:3;11071:93;:::i;:::-;11189:2;11184:3;11180:12;11173:19;;10832:366;;;:::o;11204:419::-;11370:4;11408:2;11397:9;11393:18;11385:26;;11457:9;11451:4;11447:20;11443:1;11432:9;11428:17;11421:47;11485:131;11611:4;11485:131;:::i;:::-;11477:139;;11204:419;;;:::o;11629:442::-;11778:4;11816:2;11805:9;11801:18;11793:26;;11829:71;11897:1;11886:9;11882:17;11873:6;11829:71;:::i;:::-;11910:72;11978:2;11967:9;11963:18;11954:6;11910:72;:::i;:::-;11992;12060:2;12049:9;12045:18;12036:6;11992:72;:::i;:::-;11629:442;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./DAI.sol\";\nimport \"./FAM.sol\";\n\npragma solidity 0.8.15;\n\n/// @title Staking contract for ETH\n/// @notice This contract is used to stake ETH through the Family-Staking app\ncontract DAIStake {\n    // Variables\n    IERC20 dai;\n    FAM private FAMInstance;\n    mapping(address => Stake) stakes;\n    mapping(address => uint) pendingRewards;\n    uint minDeposit = 10000000000000000;\n\n    struct Stake {\n        uint amount;\n        uint depositDate;\n    }   \n\n    // Events\n    event DepositRegistered(address userAddress, uint amount);\n    event WithdrawRegistered(address userAddress, uint amount);\n    event UpdatedRewards(address userAddress, uint amount);\n\n    /**\n     * @dev Can pass the DAI token's address from the kovan network : 0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa to use the ERC20 functions\n     * @param _DAI ERC20 DAI token contract address\n     * @param _FAM address of the deployed contract\n     */\n    constructor(address _DAI, address _FAM) {\n        dai = IERC20(_DAI);\n        FAMInstance = FAM(_FAM);\n    }\n\n    /**\n     * @notice Return the provided address staked token's balance\n     * @param _userAddress address of the user\n     */ \n    function getStakedBalance(address _userAddress) view external returns(uint) {\n        return stakes[_userAddress].amount;\n    }\n\n    /**\n     * @notice Return the total staked DAI tokens \n     * @dev Calls the balanceOf ERC20 function to return the total staked DAI tokens on this contract \n     */ \n    function getTotalStaked() view external returns(uint) {\n        return dai.balanceOf(address(this));\n    }\n\n    /**\n     * @notice Return a user pending reward balance\n     * @param _userAddress address of the user\n     */\n    function getPendingRewards(address _userAddress) view external returns(uint){\n        return pendingRewards[_userAddress];\n    }\n\n    /**\n     * @notice Allow user to stake an amount of DAI and to add this amount to their balance.\n     * @dev Calls the ERC20 approve function before the transferFrom to process the user balance\n     * @param _amount amount to stake\n     */ \n    function registerDeposit(uint256 _amount) internal {\n        require(msg.sender != address(0), \"Address can not be null\");\n        require(dai.balanceOf(msg.sender) >= _amount, \"Insufficient balance\");\n\n        // Transfer tokens to this contract\n        dai.transferFrom(msg.sender, address(this), _amount);\n\n        uint currentStake = stakes[msg.sender].amount;\n        uint currentDepositDate = stakes[msg.sender].depositDate;\n        // Updating the user stake\n        stakes[msg.sender].amount = currentStake + _amount;\n        stakes[msg.sender].depositDate = block.timestamp;\n        // We need to calculate the pending reward amount and store it\n        if(currentStake > 0) {\n            updatePendingRewards(currentStake, currentDepositDate, msg.sender);\n        }   \n\n        emit DepositRegistered(msg.sender, _amount);\n    }\n\n    /**\n     * @notice Updates the pending rewards balance of the user\n     * @dev never called from outside of the contract\n     * @param _stakes stake balance of the user\n     * @param _from uint date of last deposit / to calcul from\n     * @param _userAddress address of the user\n     */\n    function updatePendingRewards(uint _stakes, uint _from, address _userAddress) internal{\n        // calculating nbDay since deposit\n        uint nbDay = (block.timestamp - _from) / 60 / 60 / 24;\n        uint FAMValue = 7500000000000000000; // Converted to WEI\n        uint ETHValue = 1500000000000000000000; // DummyValue\n        // FAMValue / (NbJour * (0,01% * ((ETHValue * _stakes) / 10^18)))\n        uint FAMReward = ( ( ( nbDay * ( ( ( ETHValue * _stakes ) / 1000000000000000000 ) / 10000 ) ) * 1000000000000000000 ) / FAMValue );\n        // Updating user pending balance\n        pendingRewards[_userAddress] += FAMReward;\n\n        emit UpdatedRewards(_userAddress, FAMReward);\n    }\n\n    /**\n     * @notice Allow user to stake an amount of DAI and to add this amount to their balance.\n     * @dev Calls the registerStake internal function to process the user balance\n     */ \n    function deposit(uint256 _amount) payable external {\n        registerDeposit(_amount);\n    }\n\n    /**\n     * @notice Allow user to unstake an amount of DAI from their account if balance is sufficient. There is a timelock on deposit of 2 days.\n     * @dev Will revert if the contract DAI balance is not sufficient to fullfill the withdrawal\n     * @param _amount uint - Number of wei to withdraw\n     */\n    function withdraw(uint _amount) external {\n        // verifications on the user balance\n        uint userStake = stakes[msg.sender].amount;\n        require(userStake != 0, \"Account is empty\");\n        require(userStake >= _amount, \"Cannot withdraw more than your current balance\");\n        require(dai.balanceOf(address(this)) >= _amount, \"Not enough liquidity\");\n        // Storing the current date of reference and calculating the lock release\n        uint referenceDate = stakes[msg.sender].depositDate;\n        uint timeLock = referenceDate + 2 days;\n        require(block.timestamp >= timeLock, \"Deposit is time locked\");\n\n        // Updating the user's stake\n        stakes[msg.sender].amount = userStake - _amount;\n\n        // Calculating and updating the pending rewards amount\n        updatePendingRewards(userStake, referenceDate, msg.sender);\n        uint rewardsToMint = pendingRewards[msg.sender];\n        pendingRewards[msg.sender] = 0;\n        \n        // Minting the rewards to the user using the faucet function of the FAM contract\n        FAMInstance.faucet(msg.sender, rewardsToMint);\n\n        // Transfering back the amount to the user\n        dai.transfer(msg.sender, _amount);\n        \n        // TODO Error management\n\n        emit WithdrawRegistered(msg.sender, _amount);\n    }\n}",
  "sourcePath": "/home/yohann/code/Family-staking/truffle/contracts/DAIStake.sol",
  "ast": {
    "absolutePath": "project:/contracts/DAIStake.sol",
    "exportedSymbols": {
      "Context": [
        1821
      ],
      "DAI": [
        26
      ],
      "DAIStake": [
        426
      ],
      "ERC20": [
        1696
      ],
      "FAM": [
        951
      ],
      "IERC20": [
        1774
      ],
      "IERC20Metadata": [
        1799
      ],
      "Ownable": [
        1110
      ]
    },
    "id": 427,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 28,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 427,
        "sourceUnit": 1697,
        "src": "33:71:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 29,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 427,
        "sourceUnit": 1775,
        "src": "105:72:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/DAI.sol",
        "file": "./DAI.sol",
        "id": 30,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 427,
        "sourceUnit": 27,
        "src": "178:19:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/FAM.sol",
        "file": "./FAM.sol",
        "id": 31,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 427,
        "sourceUnit": 952,
        "src": "198:19:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "219:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DAIStake",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 33,
          "nodeType": "StructuredDocumentation",
          "src": "244:114:1",
          "text": "@title Staking contract for ETH\n @notice This contract is used to stake ETH through the Family-Staking app"
        },
        "fullyImplemented": true,
        "id": 426,
        "linearizedBaseContracts": [
          426
        ],
        "name": "DAIStake",
        "nameLocation": "367:8:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "dai",
            "nameLocation": "406:3:1",
            "nodeType": "VariableDeclaration",
            "scope": 426,
            "src": "399:10:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1774",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 35,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1774,
                "src": "399:6:1"
              },
              "referencedDeclaration": 1774,
              "src": "399:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1774",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "FAMInstance",
            "nameLocation": "427:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 426,
            "src": "415:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FAM_$951",
              "typeString": "contract FAM"
            },
            "typeName": {
              "id": 38,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37,
                "name": "FAM",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 951,
                "src": "415:3:1"
              },
              "referencedDeclaration": 951,
              "src": "415:3:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FAM_$951",
                "typeString": "contract FAM"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "470:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 426,
            "src": "444:32:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$56_storage_$",
              "typeString": "mapping(address => struct DAIStake.Stake)"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 40,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "452:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "444:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$56_storage_$",
                "typeString": "mapping(address => struct DAIStake.Stake)"
              },
              "valueType": {
                "id": 42,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 41,
                  "name": "Stake",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56,
                  "src": "463:5:1"
                },
                "referencedDeclaration": 56,
                "src": "463:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stake_$56_storage_ptr",
                  "typeString": "struct DAIStake.Stake"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "pendingRewards",
            "nameLocation": "507:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 426,
            "src": "482:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "490:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "482:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 46,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "501:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51,
            "mutability": "mutable",
            "name": "minDeposit",
            "nameLocation": "532:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 426,
            "src": "527:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 49,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "527:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030303030303030303030303030",
              "id": 50,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "545:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "10000000000000000"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "DAIStake.Stake",
            "id": 56,
            "members": [
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "597:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "592:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 52,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "592:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "depositDate",
                "nameLocation": "618:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "613:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "613:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stake",
            "nameLocation": "576:5:1",
            "nodeType": "StructDefinition",
            "scope": 426,
            "src": "569:67:1",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "e865f22f57d0ae46c9f05f6677e4138264cb541aeb2c4bc8c82e7a9b3dd4905a",
            "id": 62,
            "name": "DepositRegistered",
            "nameLocation": "665:17:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "691:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "683:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "709:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "704:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "704:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "682:34:1"
            },
            "src": "659:58:1"
          },
          {
            "anonymous": false,
            "eventSelector": "59945647ef1c847843ee61b123cb5a2b68b6f77f1466683a5c6b7ecd4a8a1cc8",
            "id": 68,
            "name": "WithdrawRegistered",
            "nameLocation": "728:18:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "755:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "747:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "773:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "768:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "768:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "746:34:1"
            },
            "src": "722:59:1"
          },
          {
            "anonymous": false,
            "eventSelector": "f28ead80696c20d8f2c4b30fe0abc00926c4923c4390de2cdabb35f61074fd6d",
            "id": 74,
            "name": "UpdatedRewards",
            "nameLocation": "792:14:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "815:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "807:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "833:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "828:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "806:34:1"
            },
            "src": "786:55:1"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "1147:68:1",
              "statements": [
                {
                  "expression": {
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1157:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1774",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 84,
                          "name": "_DAI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "1170:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 83,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1774,
                        "src": "1163:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1774_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1163:12:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1774",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1157:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1774",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:18:1"
                },
                {
                  "expression": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88,
                      "name": "FAMInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "1185:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FAM_$951",
                        "typeString": "contract FAM"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 90,
                          "name": "_FAM",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "1203:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 89,
                        "name": "FAM",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 951,
                        "src": "1199:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FAM_$951_$",
                          "typeString": "type(contract FAM)"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1199:9:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FAM_$951",
                        "typeString": "contract FAM"
                      }
                    },
                    "src": "1185:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FAM_$951",
                      "typeString": "contract FAM"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1185:23:1"
                }
              ]
            },
            "documentation": {
              "id": 75,
              "nodeType": "StructuredDocumentation",
              "src": "847:255:1",
              "text": " @dev Can pass the DAI token's address from the kovan network : 0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa to use the ERC20 functions\n @param _DAI ERC20 DAI token contract address\n @param _FAM address of the deployed contract"
            },
            "id": 95,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "_DAI",
                  "nameLocation": "1127:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1119:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1119:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "_FAM",
                  "nameLocation": "1141:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1133:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1133:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1118:28:1"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1147:0:1"
            },
            "scope": 426,
            "src": "1107:108:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "1427:51:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 103,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1444:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$56_storage_$",
                          "typeString": "mapping(address => struct DAIStake.Stake storage ref)"
                        }
                      },
                      "id": 105,
                      "indexExpression": {
                        "id": 104,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1451:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1444:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$56_storage",
                        "typeString": "struct DAIStake.Stake storage ref"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 53,
                    "src": "1444:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 102,
                  "id": 107,
                  "nodeType": "Return",
                  "src": "1437:34:1"
                }
              ]
            },
            "documentation": {
              "id": 96,
              "nodeType": "StructuredDocumentation",
              "src": "1221:124:1",
              "text": " @notice Return the provided address staked token's balance\n @param _userAddress address of the user"
            },
            "functionSelector": "3a02a42d",
            "id": 109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakedBalance",
            "nameLocation": "1360:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nameLocation": "1385:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1377:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1376:22:1"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1421:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1420:6:1"
            },
            "scope": 426,
            "src": "1351:127:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "1709:52:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 119,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1748:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DAIStake_$426",
                              "typeString": "contract DAIStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DAIStake_$426",
                              "typeString": "contract DAIStake"
                            }
                          ],
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1740:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 117,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1740:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1740:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 115,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1726:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1774",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1731,
                      "src": "1726:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1726:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 114,
                  "id": 122,
                  "nodeType": "Return",
                  "src": "1719:35:1"
                }
              ]
            },
            "documentation": {
              "id": 110,
              "nodeType": "StructuredDocumentation",
              "src": "1484:165:1",
              "text": " @notice Return the total staked DAI tokens \n @dev Calls the balanceOf ERC20 function to return the total staked DAI tokens on this contract "
            },
            "functionSelector": "0917e776",
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStaked",
            "nameLocation": "1664:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1678:2:1"
            },
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1703:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1703:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1702:6:1"
            },
            "scope": 426,
            "src": "1655:106:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "1958:52:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 132,
                      "name": "pendingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1975:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 134,
                    "indexExpression": {
                      "id": 133,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "1990:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1975:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 131,
                  "id": 135,
                  "nodeType": "Return",
                  "src": "1968:35:1"
                }
              ]
            },
            "documentation": {
              "id": 125,
              "nodeType": "StructuredDocumentation",
              "src": "1767:110:1",
              "text": " @notice Return a user pending reward balance\n @param _userAddress address of the user"
            },
            "functionSelector": "f6ed2017",
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingRewards",
            "nameLocation": "1891:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nameLocation": "1917:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "1909:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1909:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1908:22:1"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "1953:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1952:6:1"
            },
            "scope": 426,
            "src": "1882:128:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "2312:787:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 144,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2330:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2330:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2352:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2344:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 146,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2344:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2344:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2330:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573732063616e206e6f74206265206e756c6c",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2356:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4075f3e92a1e198d5a70237afb01d315d7b7b3bcaab1f133d4862dd823a9dede",
                          "typeString": "literal_string \"Address can not be null\""
                        },
                        "value": "Address can not be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4075f3e92a1e198d5a70237afb01d315d7b7b3bcaab1f133d4862dd823a9dede",
                          "typeString": "literal_string \"Address can not be null\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2322:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2322:60:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2322:60:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 157,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2414:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2414:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 155,
                              "name": "dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "2400:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1774",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1731,
                            "src": "2400:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2400:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 160,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "2429:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2400:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2438:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        },
                        "value": "Insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        }
                      ],
                      "id": 154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2392:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2392:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "2392:69:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 168,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2533:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2533:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 172,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2553:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DAIStake_$426",
                              "typeString": "contract DAIStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DAIStake_$426",
                              "typeString": "contract DAIStake"
                            }
                          ],
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2545:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 170,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2545:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2545:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 174,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "2560:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 165,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "2516:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1774",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1773,
                      "src": "2516:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2516:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "2516:52:1"
                },
                {
                  "assignments": [
                    178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 178,
                      "mutability": "mutable",
                      "name": "currentStake",
                      "nameLocation": "2584:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 230,
                      "src": "2579:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 177,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2579:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 184,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 179,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2599:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$56_storage_$",
                          "typeString": "mapping(address => struct DAIStake.Stake storage ref)"
                        }
                      },
                      "id": 182,
                      "indexExpression": {
                        "expression": {
                          "id": 180,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2606:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2606:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2599:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$56_storage",
                        "typeString": "struct DAIStake.Stake storage ref"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 53,
                    "src": "2599:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2579:45:1"
                },
                {
                  "assignments": [
                    186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 186,
                      "mutability": "mutable",
                      "name": "currentDepositDate",
                      "nameLocation": "2639:18:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 230,
                      "src": "2634:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 185,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2634:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 192,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 187,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2660:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$56_storage_$",
                          "typeString": "mapping(address => struct DAIStake.Stake storage ref)"
                        }
                      },
                      "id": 190,
                      "indexExpression": {
                        "expression": {
                          "id": 188,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2667:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2667:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2660:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$56_storage",
                        "typeString": "struct DAIStake.Stake storage ref"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "depositDate",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 55,
                    "src": "2660:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2634:56:1"
                },
                {
                  "expression": {
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 193,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "2735:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$56_storage_$",
                            "typeString": "mapping(address => struct DAIStake.Stake storage ref)"
                          }
                        },
                        "id": 196,
                        "indexExpression": {
                          "expression": {
                            "id": 194,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2742:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2742:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2735:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$56_storage",
                          "typeString": "struct DAIStake.Stake storage ref"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53,
                      "src": "2735:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 198,
                        "name": "currentStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "2763:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 199,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "2778:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2763:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2735:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "2735:50:1"
                },
                {
                  "expression": {
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 203,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "2795:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$56_storage_$",
                            "typeString": "mapping(address => struct DAIStake.Stake storage ref)"
                          }
                        },
                        "id": 206,
                        "indexExpression": {
                          "expression": {
                            "id": 204,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2802:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2802:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2795:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$56_storage",
                          "typeString": "struct DAIStake.Stake storage ref"
                        }
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "depositDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "2795:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 208,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2828:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2828:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2795:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "2795:48:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 212,
                      "name": "currentStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "2927:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2942:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2927:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 223,
                  "nodeType": "IfStatement",
                  "src": "2924:112:1",
                  "trueBody": {
                    "id": 222,
                    "nodeType": "Block",
                    "src": "2945:91:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 216,
                              "name": "currentStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "2980:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 217,
                              "name": "currentDepositDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 186,
                              "src": "2994:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 218,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3014:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3014:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 215,
                            "name": "updatePendingRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "2959:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,address)"
                            }
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2959:66:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 221,
                        "nodeType": "ExpressionStatement",
                        "src": "2959:66:1"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 225,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3072:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3072:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 227,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3084:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 224,
                      "name": "DepositRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "3054:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3054:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 229,
                  "nodeType": "EmitStatement",
                  "src": "3049:43:1"
                }
              ]
            },
            "documentation": {
              "id": 138,
              "nodeType": "StructuredDocumentation",
              "src": "2016:239:1",
              "text": " @notice Allow user to stake an amount of DAI and to add this amount to their balance.\n @dev Calls the ERC20 approve function before the transferFrom to process the user balance\n @param _amount amount to stake"
            },
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerDeposit",
            "nameLocation": "2270:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2294:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "2286:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2286:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2285:17:1"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2312:0:1"
            },
            "scope": 426,
            "src": "2261:838:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "3482:601:1",
              "statements": [
                {
                  "assignments": [
                    242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 242,
                      "mutability": "mutable",
                      "name": "nbDay",
                      "nameLocation": "3540:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 296,
                      "src": "3535:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 241,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3535:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 254,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 243,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "3549:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "3549:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 245,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 236,
                                "src": "3567:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3549:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 247,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3548:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3576:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "3548:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "3630",
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3581:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      "src": "3548:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3234",
                      "id": 252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3586:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_24_by_1",
                        "typeString": "int_const 24"
                      },
                      "value": "24"
                    },
                    "src": "3548:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3535:53:1"
                },
                {
                  "assignments": [
                    256
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 256,
                      "mutability": "mutable",
                      "name": "FAMValue",
                      "nameLocation": "3603:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 296,
                      "src": "3598:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 255,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3598:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 258,
                  "initialValue": {
                    "hexValue": "37353030303030303030303030303030303030",
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3614:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_7500000000000000000_by_1",
                      "typeString": "int_const 7500000000000000000"
                    },
                    "value": "7500000000000000000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3598:35:1"
                },
                {
                  "assignments": [
                    260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 260,
                      "mutability": "mutable",
                      "name": "ETHValue",
                      "nameLocation": "3668:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 296,
                      "src": "3663:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 259,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3663:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 262,
                  "initialValue": {
                    "hexValue": "31353030303030303030303030303030303030303030",
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3679:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                      "typeString": "int_const 1500000000000000000000"
                    },
                    "value": "1500000000000000000000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3663:38:1"
                },
                {
                  "assignments": [
                    264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 264,
                      "mutability": "mutable",
                      "name": "FAMReward",
                      "nameLocation": "3804:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 296,
                      "src": "3799:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 263,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3799:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 284,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 276,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 265,
                                      "name": "nbDay",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 242,
                                      "src": "3822:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 274,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 271,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 268,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 266,
                                                        "name": "ETHValue",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 260,
                                                        "src": "3836:8:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "*",
                                                      "rightExpression": {
                                                        "id": 267,
                                                        "name": "_stakes",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 234,
                                                        "src": "3847:7:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "3836:18:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 269,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "3834:22:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "/",
                                                "rightExpression": {
                                                  "hexValue": "31303030303030303030303030303030303030",
                                                  "id": 270,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "3859:19:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                    "typeString": "int_const 1000000000000000000"
                                                  },
                                                  "value": "1000000000000000000"
                                                },
                                                "src": "3834:44:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 272,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "3832:48:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "/",
                                          "rightExpression": {
                                            "hexValue": "3130303030",
                                            "id": 273,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3883:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10000_by_1",
                                              "typeString": "int_const 10000"
                                            },
                                            "value": "10000"
                                          },
                                          "src": "3832:56:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 275,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "3830:60:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3822:68:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 277,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3820:72:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "31303030303030303030303030303030303030",
                                "id": 278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3895:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1000000000000000000"
                              },
                              "src": "3820:94:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 280,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3818:98:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 281,
                          "name": "FAMValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 256,
                          "src": "3919:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3818:109:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 283,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3816:113:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3799:130:1"
                },
                {
                  "expression": {
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 285,
                        "name": "pendingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3980:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 287,
                      "indexExpression": {
                        "id": 286,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "3995:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3980:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 288,
                      "name": "FAMReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "4012:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3980:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "3980:41:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 292,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "4052:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 293,
                        "name": "FAMReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "4066:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 291,
                      "name": "UpdatedRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "4037:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4037:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "EmitStatement",
                  "src": "4032:44:1"
                }
              ]
            },
            "documentation": {
              "id": 232,
              "nodeType": "StructuredDocumentation",
              "src": "3105:286:1",
              "text": " @notice Updates the pending rewards balance of the user\n @dev never called from outside of the contract\n @param _stakes stake balance of the user\n @param _from uint date of last deposit / to calcul from\n @param _userAddress address of the user"
            },
            "id": 297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePendingRewards",
            "nameLocation": "3405:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "_stakes",
                  "nameLocation": "3431:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "3426:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3426:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3445:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "3440:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3440:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nameLocation": "3460:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "3452:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3452:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3425:48:1"
            },
            "returnParameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3482:0:1"
            },
            "scope": 426,
            "src": "3396:687:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "4332:41:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 304,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "4358:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 303,
                      "name": "registerDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "4342:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4342:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "4342:24:1"
                }
              ]
            },
            "documentation": {
              "id": 298,
              "nodeType": "StructuredDocumentation",
              "src": "4089:186:1",
              "text": " @notice Allow user to stake an amount of DAI and to add this amount to their balance.\n @dev Calls the registerStake internal function to process the user balance"
            },
            "functionSelector": "b6b55f25",
            "id": 308,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "4290:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4306:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "4298:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4298:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4297:17:1"
            },
            "returnParameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4332:0:1"
            },
            "scope": 426,
            "src": "4281:92:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 424,
              "nodeType": "Block",
              "src": "4729:1260:1",
              "statements": [
                {
                  "assignments": [
                    315
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 315,
                      "mutability": "mutable",
                      "name": "userStake",
                      "nameLocation": "4789:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 424,
                      "src": "4784:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 314,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4784:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 321,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 316,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "4801:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$56_storage_$",
                          "typeString": "mapping(address => struct DAIStake.Stake storage ref)"
                        }
                      },
                      "id": 319,
                      "indexExpression": {
                        "expression": {
                          "id": 317,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4808:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4808:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4801:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$56_storage",
                        "typeString": "struct DAIStake.Stake storage ref"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 53,
                    "src": "4801:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4784:42:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 323,
                          "name": "userStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "4844:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4857:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4844:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e7420697320656d707479",
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4860:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66",
                          "typeString": "literal_string \"Account is empty\""
                        },
                        "value": "Account is empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9408a29f36769169716ddf11b8da2f26858b244aa8c54e7983d7804f99970f66",
                          "typeString": "literal_string \"Account is empty\""
                        }
                      ],
                      "id": 322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4836:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4836:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "4836:43:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 330,
                          "name": "userStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "4897:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 331,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "4910:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4897:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74207769746864726177206d6f7265207468616e20796f75722063757272656e742062616c616e6365",
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4919:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9",
                          "typeString": "literal_string \"Cannot withdraw more than your current balance\""
                        },
                        "value": "Cannot withdraw more than your current balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73c2615ae73e44a05ce2143ac0ad1c4d74eeffd9911578a72f3da834c430b2d9",
                          "typeString": "literal_string \"Cannot withdraw more than your current balance\""
                        }
                      ],
                      "id": 329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4889:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4889:79:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "4889:79:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 341,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "5008:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DAIStake_$426",
                                    "typeString": "contract DAIStake"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DAIStake_$426",
                                    "typeString": "contract DAIStake"
                                  }
                                ],
                                "id": 340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5000:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 339,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5000:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5000:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 337,
                              "name": "dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "4986:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1774",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1731,
                            "src": "4986:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4986:28:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 344,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "5018:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4986:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768206c6971756964697479",
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5027:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
                          "typeString": "literal_string \"Not enough liquidity\""
                        },
                        "value": "Not enough liquidity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
                          "typeString": "literal_string \"Not enough liquidity\""
                        }
                      ],
                      "id": 336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4978:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4978:72:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "4978:72:1"
                },
                {
                  "assignments": [
                    350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 350,
                      "mutability": "mutable",
                      "name": "referenceDate",
                      "nameLocation": "5147:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 424,
                      "src": "5142:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 349,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5142:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 356,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 351,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "5163:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$56_storage_$",
                          "typeString": "mapping(address => struct DAIStake.Stake storage ref)"
                        }
                      },
                      "id": 354,
                      "indexExpression": {
                        "expression": {
                          "id": 352,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5170:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5170:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5163:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$56_storage",
                        "typeString": "struct DAIStake.Stake storage ref"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "depositDate",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 55,
                    "src": "5163:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5142:51:1"
                },
                {
                  "assignments": [
                    358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 358,
                      "mutability": "mutable",
                      "name": "timeLock",
                      "nameLocation": "5208:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 424,
                      "src": "5203:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 357,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5203:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 362,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 359,
                      "name": "referenceDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "5219:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5235:6:1",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_172800_by_1",
                        "typeString": "int_const 172800"
                      },
                      "value": "2"
                    },
                    "src": "5219:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5203:38:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 364,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "5259:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5259:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 366,
                          "name": "timeLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "5278:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5259:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f7369742069732074696d65206c6f636b6564",
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5288:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce",
                          "typeString": "literal_string \"Deposit is time locked\""
                        },
                        "value": "Deposit is time locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae8bf61efbb834a9ce56f046ebbf9fd84454a522f7ef3e6ba3cf7f6ac69b53ce",
                          "typeString": "literal_string \"Deposit is time locked\""
                        }
                      ],
                      "id": 363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5251:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5251:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "5251:62:1"
                },
                {
                  "expression": {
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 371,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "5361:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$56_storage_$",
                            "typeString": "mapping(address => struct DAIStake.Stake storage ref)"
                          }
                        },
                        "id": 374,
                        "indexExpression": {
                          "expression": {
                            "id": 372,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5368:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5368:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5361:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$56_storage",
                          "typeString": "struct DAIStake.Stake storage ref"
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53,
                      "src": "5361:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 376,
                        "name": "userStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "5389:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 377,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "5401:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5389:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5361:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "5361:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 382,
                        "name": "userStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "5503:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 383,
                        "name": "referenceDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "5514:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 384,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5529:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5529:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 381,
                      "name": "updatePendingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "5482:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5482:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "5482:58:1"
                },
                {
                  "assignments": [
                    389
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 389,
                      "mutability": "mutable",
                      "name": "rewardsToMint",
                      "nameLocation": "5555:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 424,
                      "src": "5550:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 388,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5550:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 394,
                  "initialValue": {
                    "baseExpression": {
                      "id": 390,
                      "name": "pendingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "5571:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 393,
                    "indexExpression": {
                      "expression": {
                        "id": 391,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5586:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5586:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5571:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5550:47:1"
                },
                {
                  "expression": {
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 395,
                        "name": "pendingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "5607:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 398,
                      "indexExpression": {
                        "expression": {
                          "id": 396,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5622:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5622:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5607:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5636:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5607:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "5607:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 405,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5764:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5764:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 407,
                        "name": "rewardsToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "5776:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 402,
                        "name": "FAMInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "5745:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FAM_$951",
                          "typeString": "contract FAM"
                        }
                      },
                      "id": 404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "faucet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 925,
                      "src": "5745:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5745:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "5745:45:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 413,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5865:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5865:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 415,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "5877:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 410,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "5852:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1774",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1741,
                      "src": "5852:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5852:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "5852:33:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 419,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5962:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5962:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 421,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "5974:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 418,
                      "name": "WithdrawRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "5943:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5943:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 423,
                  "nodeType": "EmitStatement",
                  "src": "5938:44:1"
                }
              ]
            },
            "documentation": {
              "id": 309,
              "nodeType": "StructuredDocumentation",
              "src": "4379:304:1",
              "text": " @notice Allow user to unstake an amount of DAI from their account if balance is sufficient. There is a timelock on deposit of 2 days.\n @dev Will revert if the contract DAI balance is not sufficient to fullfill the withdrawal\n @param _amount uint - Number of wei to withdraw"
            },
            "functionSelector": "2e1a7d4d",
            "id": 425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "4697:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4711:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "4706:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4706:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4705:14:1"
            },
            "returnParameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4729:0:1"
            },
            "scope": 426,
            "src": "4688:1301:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 427,
        "src": "358:5633:1",
        "usedErrors": []
      }
    ],
    "src": "33:5958:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {},
      "links": {},
      "address": "0x2AbA05650259D5AA4ff61FD0EaE14faBF00A5ad1",
      "transactionHash": "0x2b118deacfe0505a68762e11e74ca0ec55ef10a6501e1b3879785b5908432e37"
    },
    "1659873198463": {
      "events": {},
      "links": {},
      "address": "0xDC47132e87Aa623C20F1cEE478b0DBe026684862",
      "transactionHash": "0xd506f52467460bed161986edcfa99e3835c471f14a0a3f8177398c08410e8852"
    },
    "1659904526396": {
      "events": {},
      "links": {},
      "address": "0x174bC4F83AEe62b7Dfead66F21a37600AC56C0B1",
      "transactionHash": "0x104a689b9e33a869f32be429d66e15b6458ef17164a772d8ed87c7a094f9e5e6"
    },
    "1659906782522": {
      "events": {},
      "links": {},
      "address": "0xAA535Dd3AdC895a514dEd12475a6a9fe30fFD6aA",
      "transactionHash": "0xbf45771dfa1338007255afdf5c790b8f177918afa6db3ecdf9883dbdb84d7b18"
    }
  },
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-08-07T21:53:06.057Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Can pass the DAI token's address from the kovan network : 0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa to use the ERC20 functions",
        "params": {
          "_DAI": "ERC20 DAI token contract address",
          "_FAM": "address of the deployed contract"
        }
      },
      "deposit(uint256)": {
        "details": "Calls the registerStake internal function to process the user balance"
      },
      "getPendingRewards(address)": {
        "params": {
          "_userAddress": "address of the user"
        }
      },
      "getStakedBalance(address)": {
        "params": {
          "_userAddress": "address of the user"
        }
      },
      "getTotalStaked()": {
        "details": "Calls the balanceOf ERC20 function to return the total staked DAI tokens on this contract "
      },
      "withdraw(uint256)": {
        "details": "Will revert if the contract DAI balance is not sufficient to fullfill the withdrawal",
        "params": {
          "_amount": "uint - Number of wei to withdraw"
        }
      }
    },
    "title": "Staking contract for ETH",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deposit(uint256)": {
        "notice": "Allow user to stake an amount of DAI and to add this amount to their balance."
      },
      "getPendingRewards(address)": {
        "notice": "Return a user pending reward balance"
      },
      "getStakedBalance(address)": {
        "notice": "Return the provided address staked token's balance"
      },
      "getTotalStaked()": {
        "notice": "Return the total staked DAI tokens "
      },
      "withdraw(uint256)": {
        "notice": "Allow user to unstake an amount of DAI from their account if balance is sufficient. There is a timelock on deposit of 2 days."
      }
    },
    "notice": "This contract is used to stake ETH through the Family-Staking app",
    "version": 1
  }
}